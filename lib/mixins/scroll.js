'use strict';

function onScroll(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('scroll', handler, element, intermediateHandler);
}

function offScroll(handler, element) {
  this.off('scroll', handler, element);
}

function getScrollTop() {
  return this.domElement.scrollTop;
}

function getScrollLeft() {
  return this.domElement.scrollLeft;
}

function setScrollTop(scrollTop) {
  this.domElement.scrollTop = scrollTop;
}

function setScrollLeft(scrollLeft) {
  this.domElement.scrollLeft = scrollLeft;
}

module.exports = {
  onScroll: onScroll,
  offScroll: offScroll,
  getScrollTop: getScrollTop,
  getScrollLeft: getScrollLeft,
  setScrollTop: setScrollTop,
  setScrollLeft: setScrollLeft
};

function defaultIntermediateHandler(handler, event, element) {
  var scrollTop = element.getScrollTop(),
      scrollLeft = element.getScrollLeft();

  handler.call(element, scrollTop, scrollLeft, event, element);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbnMvc2Nyb2xsLmpzIl0sIm5hbWVzIjpbIm9uU2Nyb2xsIiwiaGFuZGxlciIsImVsZW1lbnQiLCJpbnRlcm1lZGlhdGVIYW5kbGVyIiwiZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIiLCJvbiIsIm9mZlNjcm9sbCIsIm9mZiIsImdldFNjcm9sbFRvcCIsImRvbUVsZW1lbnQiLCJzY3JvbGxUb3AiLCJnZXRTY3JvbGxMZWZ0Iiwic2Nyb2xsTGVmdCIsInNldFNjcm9sbFRvcCIsInNldFNjcm9sbExlZnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiZXZlbnQiLCJjYWxsIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxRQUFULENBQWtCQyxPQUFsQixFQUEyQkMsT0FBM0IsRUFBc0Y7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCOztBQUNwRixPQUFLQyxFQUFMLENBQVEsUUFBUixFQUFrQkosT0FBbEIsRUFBMkJDLE9BQTNCLEVBQW9DQyxtQkFBcEM7QUFDRDs7QUFFRCxTQUFTRyxTQUFULENBQW1CTCxPQUFuQixFQUE0QkMsT0FBNUIsRUFBcUM7QUFBRSxPQUFLSyxHQUFMLENBQVMsUUFBVCxFQUFtQk4sT0FBbkIsRUFBNEJDLE9BQTVCO0FBQXVDOztBQUU5RSxTQUFTTSxZQUFULEdBQXdCO0FBQUUsU0FBTyxLQUFLQyxVQUFMLENBQWdCQyxTQUF2QjtBQUFtQzs7QUFFN0QsU0FBU0MsYUFBVCxHQUF5QjtBQUFFLFNBQU8sS0FBS0YsVUFBTCxDQUFnQkcsVUFBdkI7QUFBb0M7O0FBRS9ELFNBQVNDLFlBQVQsQ0FBc0JILFNBQXRCLEVBQWlDO0FBQUUsT0FBS0QsVUFBTCxDQUFnQkMsU0FBaEIsR0FBNEJBLFNBQTVCO0FBQXdDOztBQUUzRSxTQUFTSSxhQUFULENBQXVCRixVQUF2QixFQUFtQztBQUFFLE9BQUtILFVBQUwsQ0FBZ0JHLFVBQWhCLEdBQTZCQSxVQUE3QjtBQUEwQzs7QUFFL0VHLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmhCLG9CQURlO0FBRWZNLHNCQUZlO0FBR2ZFLDRCQUhlO0FBSWZHLDhCQUplO0FBS2ZFLDRCQUxlO0FBTWZDO0FBTmUsQ0FBakI7O0FBU0EsU0FBU1YsMEJBQVQsQ0FBb0NILE9BQXBDLEVBQTZDZ0IsS0FBN0MsRUFBb0RmLE9BQXBELEVBQTZEO0FBQzNELE1BQU1RLFlBQVlSLFFBQVFNLFlBQVIsRUFBbEI7QUFBQSxNQUNNSSxhQUFhVixRQUFRUyxhQUFSLEVBRG5COztBQUdBVixVQUFRaUIsSUFBUixDQUFhaEIsT0FBYixFQUFzQlEsU0FBdEIsRUFBaUNFLFVBQWpDLEVBQTZDSyxLQUE3QyxFQUFvRGYsT0FBcEQ7QUFDRCIsImZpbGUiOiJzY3JvbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9uU2Nyb2xsKGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKCdzY3JvbGwnLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb2ZmU2Nyb2xsKGhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoJ3Njcm9sbCcsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIGdldFNjcm9sbFRvcCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zY3JvbGxUb3A7IH1cblxuZnVuY3Rpb24gZ2V0U2Nyb2xsTGVmdCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zY3JvbGxMZWZ0OyB9XG5cbmZ1bmN0aW9uIHNldFNjcm9sbFRvcChzY3JvbGxUb3ApIHsgdGhpcy5kb21FbGVtZW50LnNjcm9sbFRvcCA9IHNjcm9sbFRvcDsgfVxuXG5mdW5jdGlvbiBzZXRTY3JvbGxMZWZ0KHNjcm9sbExlZnQpIHsgdGhpcy5kb21FbGVtZW50LnNjcm9sbExlZnQgPSBzY3JvbGxMZWZ0OyB9XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBvblNjcm9sbCxcbiAgb2ZmU2Nyb2xsLFxuICBnZXRTY3JvbGxUb3AsXG4gIGdldFNjcm9sbExlZnQsXG4gIHNldFNjcm9sbFRvcCxcbiAgc2V0U2Nyb2xsTGVmdFxufTtcblxuZnVuY3Rpb24gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIoaGFuZGxlciwgZXZlbnQsIGVsZW1lbnQpIHtcbiAgY29uc3Qgc2Nyb2xsVG9wID0gZWxlbWVudC5nZXRTY3JvbGxUb3AoKSxcbiAgICAgICAgc2Nyb2xsTGVmdCA9IGVsZW1lbnQuZ2V0U2Nyb2xsTGVmdCgpO1xuICBcbiAgaGFuZGxlci5jYWxsKGVsZW1lbnQsIHNjcm9sbFRvcCwgc2Nyb2xsTGVmdCwgZXZlbnQsIGVsZW1lbnQpO1xufVxuIl19
'use strict';

function onScroll(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('scroll', handler, element, intermediateHandler);
}

function offScroll(handler, element) {
  this.off('scroll', handler, element);
}

function getScrollTop() {
  return this.domElement.scrollTop;
}

function getScrollLeft() {
  return this.domElement.scrollLeft;
}

function setScrollTop(scrollTop) {
  this.domElement.scrollTop = scrollTop;
}

function setScrollLeft(scrollLeft) {
  this.domElement.scrollLeft = scrollLeft;
}

module.exports = {
  onScroll: onScroll,
  offScroll: offScroll,
  getScrollTop: getScrollTop,
  getScrollLeft: getScrollLeft,
  setScrollTop: setScrollTop,
  setScrollLeft: setScrollLeft
};

function defaultIntermediateHandler(handler, event, element) {
  var scrollTop = element.getScrollTop(),
      scrollLeft = element.getScrollLeft();

  handler.apply(element, scrollTop, scrollLeft, event);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbnMvc2Nyb2xsLmpzIl0sIm5hbWVzIjpbIm9uU2Nyb2xsIiwiaGFuZGxlciIsImVsZW1lbnQiLCJpbnRlcm1lZGlhdGVIYW5kbGVyIiwiZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIiLCJvbiIsIm9mZlNjcm9sbCIsIm9mZiIsImdldFNjcm9sbFRvcCIsImRvbUVsZW1lbnQiLCJzY3JvbGxUb3AiLCJnZXRTY3JvbGxMZWZ0Iiwic2Nyb2xsTGVmdCIsInNldFNjcm9sbFRvcCIsInNldFNjcm9sbExlZnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiZXZlbnQiLCJhcHBseSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsUUFBVCxDQUFrQkMsT0FBbEIsRUFBMkJDLE9BQTNCLEVBQXNGO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0Qjs7QUFDcEYsT0FBS0MsRUFBTCxDQUFRLFFBQVIsRUFBa0JKLE9BQWxCLEVBQTJCQyxPQUEzQixFQUFvQ0MsbUJBQXBDO0FBQ0Q7O0FBRUQsU0FBU0csU0FBVCxDQUFtQkwsT0FBbkIsRUFBNEJDLE9BQTVCLEVBQXFDO0FBQUUsT0FBS0ssR0FBTCxDQUFTLFFBQVQsRUFBbUJOLE9BQW5CLEVBQTRCQyxPQUE1QjtBQUF1Qzs7QUFFOUUsU0FBU00sWUFBVCxHQUF3QjtBQUFFLFNBQU8sS0FBS0MsVUFBTCxDQUFnQkMsU0FBdkI7QUFBbUM7O0FBRTdELFNBQVNDLGFBQVQsR0FBeUI7QUFBRSxTQUFPLEtBQUtGLFVBQUwsQ0FBZ0JHLFVBQXZCO0FBQW9DOztBQUUvRCxTQUFTQyxZQUFULENBQXNCSCxTQUF0QixFQUFpQztBQUFFLE9BQUtELFVBQUwsQ0FBZ0JDLFNBQWhCLEdBQTRCQSxTQUE1QjtBQUF3Qzs7QUFFM0UsU0FBU0ksYUFBVCxDQUF1QkYsVUFBdkIsRUFBbUM7QUFBRSxPQUFLSCxVQUFMLENBQWdCRyxVQUFoQixHQUE2QkEsVUFBN0I7QUFBMEM7O0FBRS9FRyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZoQixvQkFEZTtBQUVmTSxzQkFGZTtBQUdmRSw0QkFIZTtBQUlmRyw4QkFKZTtBQUtmRSw0QkFMZTtBQU1mQztBQU5lLENBQWpCOztBQVNBLFNBQVNWLDBCQUFULENBQW9DSCxPQUFwQyxFQUE2Q2dCLEtBQTdDLEVBQW9EZixPQUFwRCxFQUE2RDtBQUMzRCxNQUFNUSxZQUFZUixRQUFRTSxZQUFSLEVBQWxCO0FBQUEsTUFDTUksYUFBYVYsUUFBUVMsYUFBUixFQURuQjs7QUFHQVYsVUFBUWlCLEtBQVIsQ0FBY2hCLE9BQWQsRUFBdUJRLFNBQXZCLEVBQWtDRSxVQUFsQyxFQUE4Q0ssS0FBOUM7QUFDRCIsImZpbGUiOiJzY3JvbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9uU2Nyb2xsKGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKCdzY3JvbGwnLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb2ZmU2Nyb2xsKGhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoJ3Njcm9sbCcsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIGdldFNjcm9sbFRvcCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zY3JvbGxUb3A7IH1cblxuZnVuY3Rpb24gZ2V0U2Nyb2xsTGVmdCgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zY3JvbGxMZWZ0OyB9XG5cbmZ1bmN0aW9uIHNldFNjcm9sbFRvcChzY3JvbGxUb3ApIHsgdGhpcy5kb21FbGVtZW50LnNjcm9sbFRvcCA9IHNjcm9sbFRvcDsgfVxuXG5mdW5jdGlvbiBzZXRTY3JvbGxMZWZ0KHNjcm9sbExlZnQpIHsgdGhpcy5kb21FbGVtZW50LnNjcm9sbExlZnQgPSBzY3JvbGxMZWZ0OyB9XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBvblNjcm9sbCxcbiAgb2ZmU2Nyb2xsLFxuICBnZXRTY3JvbGxUb3AsXG4gIGdldFNjcm9sbExlZnQsXG4gIHNldFNjcm9sbFRvcCxcbiAgc2V0U2Nyb2xsTGVmdFxufTtcblxuZnVuY3Rpb24gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIoaGFuZGxlciwgZXZlbnQsIGVsZW1lbnQpIHtcbiAgY29uc3Qgc2Nyb2xsVG9wID0gZWxlbWVudC5nZXRTY3JvbGxUb3AoKSxcbiAgICAgICAgc2Nyb2xsTGVmdCA9IGVsZW1lbnQuZ2V0U2Nyb2xsTGVmdCgpO1xuICBcbiAgaGFuZGxlci5hcHBseShlbGVtZW50LCBzY3JvbGxUb3AsIHNjcm9sbExlZnQsIGV2ZW50KTtcbn1cbiJdfQ==
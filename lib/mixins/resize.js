"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onResize = onResize;
exports.offResize = offResize;
exports.addResizeObject = addResizeObject;
exports.removeResizeObject = removeResizeObject;

function onResize(resizeHandler, element) {
  this.on("resize", resizeHandler, element);
}

function offResize(resizeHandler, element) {
  this.off("resize", resizeHandler, element);
}

function addResizeObject() {
  var _this = this;

  var resizeObject = document.createElement("object"),
      style = "display: block; \n                 position: absolute; \n                 top: 0; \n                 left: 0; \n                 height: 100%; \n                 width: 100%; \n                 overflow: hidden; \n                 pointer-events: none; \n                 z-index: -1;",
      data = "about:blank",
      type = "text/html";
  resizeObject.setAttribute("style", style);
  resizeObject.data = data;
  resizeObject.type = type;
  this.__resizeObject__ = resizeObject;

  resizeObject.onload = function () {
    return resizeObjectLoadHandler(_this);
  };

  this.domElement.appendChild(resizeObject);
}

function removeResizeObject() {
  var resizeObject = this.__resizeObject__,
      objectWindow = resizeObject.contentDocument.defaultView; ///

  objectWindow.removeEventListener("resize", resizeEventListener);
  this.domElement.removeChild(resizeObject);
}

function resizeObjectLoadHandler(element) {
  var resizeObject = element.__resizeObject__,
      resizeObjectWindow = resizeObject.contentDocument.defaultView; ///

  resizeObjectWindow.addEventListener("resize", function (event) {
    var resizeEventListeners = element.findEventListeners("resize");
    resizeEventListeners.forEach(function (resizeEventListener) {
      return resizeEventListener(event);
    });
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2l6ZS5qcyJdLCJuYW1lcyI6WyJvblJlc2l6ZSIsInJlc2l6ZUhhbmRsZXIiLCJlbGVtZW50Iiwib24iLCJvZmZSZXNpemUiLCJvZmYiLCJhZGRSZXNpemVPYmplY3QiLCJyZXNpemVPYmplY3QiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImRhdGEiLCJ0eXBlIiwic2V0QXR0cmlidXRlIiwiX19yZXNpemVPYmplY3RfXyIsIm9ubG9hZCIsInJlc2l6ZU9iamVjdExvYWRIYW5kbGVyIiwiZG9tRWxlbWVudCIsImFwcGVuZENoaWxkIiwicmVtb3ZlUmVzaXplT2JqZWN0Iiwib2JqZWN0V2luZG93IiwiY29udGVudERvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVzaXplRXZlbnRMaXN0ZW5lciIsInJlbW92ZUNoaWxkIiwicmVzaXplT2JqZWN0V2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicmVzaXplRXZlbnRMaXN0ZW5lcnMiLCJmaW5kRXZlbnRMaXN0ZW5lcnMiLCJmb3JFYWNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQUVPLFNBQVNBLFFBQVQsQ0FBa0JDLGFBQWxCLEVBQWlDQyxPQUFqQyxFQUEwQztBQUFFLE9BQUtDLEVBQUwsQ0FBUSxRQUFSLEVBQWtCRixhQUFsQixFQUFpQ0MsT0FBakM7QUFBNEM7O0FBRXhGLFNBQVNFLFNBQVQsQ0FBbUJILGFBQW5CLEVBQWtDQyxPQUFsQyxFQUEyQztBQUFFLE9BQUtHLEdBQUwsQ0FBUyxRQUFULEVBQW1CSixhQUFuQixFQUFrQ0MsT0FBbEM7QUFBNkM7O0FBRTFGLFNBQVNJLGVBQVQsR0FBMkI7QUFBQTs7QUFDaEMsTUFBTUMsWUFBWSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBckI7QUFBQSxNQUNNQyxLQUFLLGlTQURYO0FBQUEsTUFVTUMsSUFBSSxHQUFHLGFBVmI7QUFBQSxNQVdNQyxJQUFJLEdBQUcsV0FYYjtBQWFBTCxFQUFBQSxZQUFZLENBQUNNLFlBQWIsQ0FBMEIsT0FBMUIsRUFBbUNILEtBQW5DO0FBQ0FILEVBQUFBLFlBQVksQ0FBQ0ksSUFBYixHQUFvQkEsSUFBcEI7QUFDQUosRUFBQUEsWUFBWSxDQUFDSyxJQUFiLEdBQW9CQSxJQUFwQjtBQUVBLE9BQUtFLGdCQUFMLEdBQXdCUCxZQUF4Qjs7QUFFQUEsRUFBQUEsWUFBWSxDQUFDUSxNQUFiLEdBQXNCO0FBQUEsV0FBTUMsdUJBQXVCLENBQUMsS0FBRCxDQUE3QjtBQUFBLEdBQXRCOztBQUVBLE9BQUtDLFVBQUwsQ0FBZ0JDLFdBQWhCLENBQTRCWCxZQUE1QjtBQUNEOztBQUVNLFNBQVNZLGtCQUFULEdBQThCO0FBQ25DLE1BQU1aLFlBQVksR0FBRyxLQUFLTyxnQkFBMUI7QUFBQSxNQUNNTSxZQUFZLEdBQUdiLFlBQVksQ0FBQ2MsZUFBYixDQUE2QkMsV0FEbEQsQ0FEbUMsQ0FFNkI7O0FBRWhFRixFQUFBQSxZQUFZLENBQUNHLG1CQUFiLENBQWlDLFFBQWpDLEVBQTJDQyxtQkFBM0M7QUFFQSxPQUFLUCxVQUFMLENBQWdCUSxXQUFoQixDQUE0QmxCLFlBQTVCO0FBQ0Q7O0FBRUQsU0FBU1MsdUJBQVQsQ0FBaUNkLE9BQWpDLEVBQTBDO0FBQ3hDLE1BQU1LLFlBQVksR0FBR0wsT0FBTyxDQUFDWSxnQkFBN0I7QUFBQSxNQUNNWSxrQkFBa0IsR0FBR25CLFlBQVksQ0FBQ2MsZUFBYixDQUE2QkMsV0FEeEQsQ0FEd0MsQ0FFOEI7O0FBRXRFSSxFQUFBQSxrQkFBa0IsQ0FBQ0MsZ0JBQW5CLENBQW9DLFFBQXBDLEVBQThDLFVBQUNDLEtBQUQsRUFBVztBQUN2RCxRQUFNQyxvQkFBb0IsR0FBRzNCLE9BQU8sQ0FBQzRCLGtCQUFSLENBQTJCLFFBQTNCLENBQTdCO0FBRUFELElBQUFBLG9CQUFvQixDQUFDRSxPQUFyQixDQUE2QixVQUFDUCxtQkFBRDtBQUFBLGFBQXlCQSxtQkFBbUIsQ0FBQ0ksS0FBRCxDQUE1QztBQUFBLEtBQTdCO0FBQ0QsR0FKRDtBQUtEIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvblJlc2l6ZShyZXNpemVIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub24oXCJyZXNpemVcIiwgcmVzaXplSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZXhwb3J0IGZ1bmN0aW9uIG9mZlJlc2l6ZShyZXNpemVIYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKFwicmVzaXplXCIsIHJlc2l6ZUhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRSZXNpemVPYmplY3QoKSB7XG4gIGNvbnN0IHJlc2l6ZU9iamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvYmplY3RcIiksXG4gICAgICAgIHN0eWxlID0gYGRpc3BsYXk6IGJsb2NrOyBcbiAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyBcbiAgICAgICAgICAgICAgICAgdG9wOiAwOyBcbiAgICAgICAgICAgICAgICAgbGVmdDogMDsgXG4gICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTsgXG4gICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOyBcbiAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyBcbiAgICAgICAgICAgICAgICAgei1pbmRleDogLTE7YCxcbiAgICAgICAgZGF0YSA9IFwiYWJvdXQ6YmxhbmtcIixcbiAgICAgICAgdHlwZSA9IFwidGV4dC9odG1sXCI7XG5cbiAgcmVzaXplT2JqZWN0LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIHN0eWxlKTtcbiAgcmVzaXplT2JqZWN0LmRhdGEgPSBkYXRhO1xuICByZXNpemVPYmplY3QudHlwZSA9IHR5cGU7XG5cbiAgdGhpcy5fX3Jlc2l6ZU9iamVjdF9fID0gcmVzaXplT2JqZWN0O1xuXG4gIHJlc2l6ZU9iamVjdC5vbmxvYWQgPSAoKSA9PiByZXNpemVPYmplY3RMb2FkSGFuZGxlcih0aGlzKTtcblxuICB0aGlzLmRvbUVsZW1lbnQuYXBwZW5kQ2hpbGQocmVzaXplT2JqZWN0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVJlc2l6ZU9iamVjdCgpIHtcbiAgY29uc3QgcmVzaXplT2JqZWN0ID0gdGhpcy5fX3Jlc2l6ZU9iamVjdF9fLFxuICAgICAgICBvYmplY3RXaW5kb3cgPSByZXNpemVPYmplY3QuY29udGVudERvY3VtZW50LmRlZmF1bHRWaWV3OyAgLy8vXG5cbiAgb2JqZWN0V2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgcmVzaXplRXZlbnRMaXN0ZW5lcik7XG5cbiAgdGhpcy5kb21FbGVtZW50LnJlbW92ZUNoaWxkKHJlc2l6ZU9iamVjdCk7XG59XG5cbmZ1bmN0aW9uIHJlc2l6ZU9iamVjdExvYWRIYW5kbGVyKGVsZW1lbnQpIHtcbiAgY29uc3QgcmVzaXplT2JqZWN0ID0gZWxlbWVudC5fX3Jlc2l6ZU9iamVjdF9fLFxuICAgICAgICByZXNpemVPYmplY3RXaW5kb3cgPSByZXNpemVPYmplY3QuY29udGVudERvY3VtZW50LmRlZmF1bHRWaWV3OyAgLy8vXG5cbiAgcmVzaXplT2JqZWN0V2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgcmVzaXplRXZlbnRMaXN0ZW5lcnMgPSBlbGVtZW50LmZpbmRFdmVudExpc3RlbmVycyhcInJlc2l6ZVwiKTtcblxuICAgIHJlc2l6ZUV2ZW50TGlzdGVuZXJzLmZvckVhY2goKHJlc2l6ZUV2ZW50TGlzdGVuZXIpID0+IHJlc2l6ZUV2ZW50TGlzdGVuZXIoZXZlbnQpKTtcbiAgfSk7XG59XG4iXX0=
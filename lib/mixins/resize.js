"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onResize = onResize;
exports.offResize = offResize;
exports.addResizeObject = addResizeObject;
exports.removeResizeObject = removeResizeObject;

function onResize(resizeHandler, element) {
  this.on("resize", resizeHandler, element);
}

function offResize(resizeHandler, element) {
  this.off("resize", resizeHandler, element);
}

function addResizeObject() {
  var _this = this;

  var resizeObject = document.createElement("object"),
      style = "display: block; \n                 position: absolute; \n                 top: 0; \n                 left: 0; \n                 height: 100%; \n                 width: 100%; \n                 overflow: hidden; \n                 pointer-events: none; \n                 z-index: -1;",
      data = "about:blank",
      type = "text/html";
  resizeObject.setAttribute("style", style);
  resizeObject.data = data;
  resizeObject.type = type;
  this.__resizeObject__ = resizeObject;

  resizeObject.onload = function () {
    return resizeObjectLoadHandler(_this);
  };

  this.domElement.appendChild(resizeObject);
}

function removeResizeObject() {
  var resizeObject = this.__resizeObject__,
      objectWindow = resizeObject.contentDocument.defaultView; ///

  objectWindow.removeEventListener("resize", resizeEventListener);
  this.domElement.removeChild(resizeObject);
}

function resizeObjectLoadHandler(element) {
  var resizeObject = element.__resizeObject__,
      resizeObjectWindow = resizeObject.contentDocument.defaultView; ///

  resizeObjectWindow.addEventListener("resize", function (event) {
    var resizeEventListeners = element.findEventListeners("resize");
    resizeEventListeners.forEach(function (resizeEventListener) {
      return resizeEventListener.call(element, event, element);
    });
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2l6ZS5qcyJdLCJuYW1lcyI6WyJvblJlc2l6ZSIsInJlc2l6ZUhhbmRsZXIiLCJlbGVtZW50Iiwib24iLCJvZmZSZXNpemUiLCJvZmYiLCJhZGRSZXNpemVPYmplY3QiLCJyZXNpemVPYmplY3QiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImRhdGEiLCJ0eXBlIiwic2V0QXR0cmlidXRlIiwiX19yZXNpemVPYmplY3RfXyIsIm9ubG9hZCIsInJlc2l6ZU9iamVjdExvYWRIYW5kbGVyIiwiZG9tRWxlbWVudCIsImFwcGVuZENoaWxkIiwicmVtb3ZlUmVzaXplT2JqZWN0Iiwib2JqZWN0V2luZG93IiwiY29udGVudERvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVzaXplRXZlbnRMaXN0ZW5lciIsInJlbW92ZUNoaWxkIiwicmVzaXplT2JqZWN0V2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicmVzaXplRXZlbnRMaXN0ZW5lcnMiLCJmaW5kRXZlbnRMaXN0ZW5lcnMiLCJmb3JFYWNoIiwiY2FsbCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFFTyxTQUFTQSxRQUFULENBQWtCQyxhQUFsQixFQUFpQ0MsT0FBakMsRUFBMEM7QUFBRSxPQUFLQyxFQUFMLENBQVEsUUFBUixFQUFrQkYsYUFBbEIsRUFBaUNDLE9BQWpDO0FBQTRDOztBQUV4RixTQUFTRSxTQUFULENBQW1CSCxhQUFuQixFQUFrQ0MsT0FBbEMsRUFBMkM7QUFBRSxPQUFLRyxHQUFMLENBQVMsUUFBVCxFQUFtQkosYUFBbkIsRUFBa0NDLE9BQWxDO0FBQTZDOztBQUUxRixTQUFTSSxlQUFULEdBQTJCO0FBQUE7O0FBQ2hDLE1BQU1DLFlBQVksR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLFFBQXZCLENBQXJCO0FBQUEsTUFDTUMsS0FBSyxpU0FEWDtBQUFBLE1BVU1DLElBQUksR0FBRyxhQVZiO0FBQUEsTUFXTUMsSUFBSSxHQUFHLFdBWGI7QUFhQUwsRUFBQUEsWUFBWSxDQUFDTSxZQUFiLENBQTBCLE9BQTFCLEVBQW1DSCxLQUFuQztBQUNBSCxFQUFBQSxZQUFZLENBQUNJLElBQWIsR0FBb0JBLElBQXBCO0FBQ0FKLEVBQUFBLFlBQVksQ0FBQ0ssSUFBYixHQUFvQkEsSUFBcEI7QUFFQSxPQUFLRSxnQkFBTCxHQUF3QlAsWUFBeEI7O0FBRUFBLEVBQUFBLFlBQVksQ0FBQ1EsTUFBYixHQUFzQjtBQUFBLFdBQU1DLHVCQUF1QixDQUFDLEtBQUQsQ0FBN0I7QUFBQSxHQUF0Qjs7QUFFQSxPQUFLQyxVQUFMLENBQWdCQyxXQUFoQixDQUE0QlgsWUFBNUI7QUFDRDs7QUFFTSxTQUFTWSxrQkFBVCxHQUE4QjtBQUNuQyxNQUFNWixZQUFZLEdBQUcsS0FBS08sZ0JBQTFCO0FBQUEsTUFDTU0sWUFBWSxHQUFHYixZQUFZLENBQUNjLGVBQWIsQ0FBNkJDLFdBRGxELENBRG1DLENBRTZCOztBQUVoRUYsRUFBQUEsWUFBWSxDQUFDRyxtQkFBYixDQUFpQyxRQUFqQyxFQUEyQ0MsbUJBQTNDO0FBRUEsT0FBS1AsVUFBTCxDQUFnQlEsV0FBaEIsQ0FBNEJsQixZQUE1QjtBQUNEOztBQUVELFNBQVNTLHVCQUFULENBQWlDZCxPQUFqQyxFQUEwQztBQUN4QyxNQUFNSyxZQUFZLEdBQUdMLE9BQU8sQ0FBQ1ksZ0JBQTdCO0FBQUEsTUFDTVksa0JBQWtCLEdBQUduQixZQUFZLENBQUNjLGVBQWIsQ0FBNkJDLFdBRHhELENBRHdDLENBRThCOztBQUV0RUksRUFBQUEsa0JBQWtCLENBQUNDLGdCQUFuQixDQUFvQyxRQUFwQyxFQUE4QyxVQUFDQyxLQUFELEVBQVc7QUFDdkQsUUFBTUMsb0JBQW9CLEdBQUczQixPQUFPLENBQUM0QixrQkFBUixDQUEyQixRQUEzQixDQUE3QjtBQUVBRCxJQUFBQSxvQkFBb0IsQ0FBQ0UsT0FBckIsQ0FBNkIsVUFBQ1AsbUJBQUQ7QUFBQSxhQUF5QkEsbUJBQW1CLENBQUNRLElBQXBCLENBQXlCOUIsT0FBekIsRUFBa0MwQixLQUFsQyxFQUF5QzFCLE9BQXpDLENBQXpCO0FBQUEsS0FBN0I7QUFDRCxHQUpEO0FBS0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG9uUmVzaXplKHJlc2l6ZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vbihcInJlc2l6ZVwiLCByZXNpemVIYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gb2ZmUmVzaXplKHJlc2l6ZUhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoXCJyZXNpemVcIiwgcmVzaXplSGFuZGxlciwgZWxlbWVudCk7IH1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFJlc2l6ZU9iamVjdCgpIHtcbiAgY29uc3QgcmVzaXplT2JqZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9iamVjdFwiKSxcbiAgICAgICAgc3R5bGUgPSBgZGlzcGxheTogYmxvY2s7IFxuICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxuICAgICAgICAgICAgICAgICB0b3A6IDA7IFxuICAgICAgICAgICAgICAgICBsZWZ0OiAwOyBcbiAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOyBcbiAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7IFxuICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyBcbiAgICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IFxuICAgICAgICAgICAgICAgICB6LWluZGV4OiAtMTtgLFxuICAgICAgICBkYXRhID0gXCJhYm91dDpibGFua1wiLFxuICAgICAgICB0eXBlID0gXCJ0ZXh0L2h0bWxcIjtcblxuICByZXNpemVPYmplY3Quc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgc3R5bGUpO1xuICByZXNpemVPYmplY3QuZGF0YSA9IGRhdGE7XG4gIHJlc2l6ZU9iamVjdC50eXBlID0gdHlwZTtcblxuICB0aGlzLl9fcmVzaXplT2JqZWN0X18gPSByZXNpemVPYmplY3Q7XG5cbiAgcmVzaXplT2JqZWN0Lm9ubG9hZCA9ICgpID0+IHJlc2l6ZU9iamVjdExvYWRIYW5kbGVyKHRoaXMpO1xuXG4gIHRoaXMuZG9tRWxlbWVudC5hcHBlbmRDaGlsZChyZXNpemVPYmplY3QpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlUmVzaXplT2JqZWN0KCkge1xuICBjb25zdCByZXNpemVPYmplY3QgPSB0aGlzLl9fcmVzaXplT2JqZWN0X18sXG4gICAgICAgIG9iamVjdFdpbmRvdyA9IHJlc2l6ZU9iamVjdC5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXc7ICAvLy9cblxuICBvYmplY3RXaW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCByZXNpemVFdmVudExpc3RlbmVyKTtcblxuICB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlQ2hpbGQocmVzaXplT2JqZWN0KTtcbn1cblxuZnVuY3Rpb24gcmVzaXplT2JqZWN0TG9hZEhhbmRsZXIoZWxlbWVudCkge1xuICBjb25zdCByZXNpemVPYmplY3QgPSBlbGVtZW50Ll9fcmVzaXplT2JqZWN0X18sXG4gICAgICAgIHJlc2l6ZU9iamVjdFdpbmRvdyA9IHJlc2l6ZU9iamVjdC5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXc7ICAvLy9cblxuICByZXNpemVPYmplY3RXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCAoZXZlbnQpID0+IHtcbiAgICBjb25zdCByZXNpemVFdmVudExpc3RlbmVycyA9IGVsZW1lbnQuZmluZEV2ZW50TGlzdGVuZXJzKFwicmVzaXplXCIpO1xuXG4gICAgcmVzaXplRXZlbnRMaXN0ZW5lcnMuZm9yRWFjaCgocmVzaXplRXZlbnRMaXN0ZW5lcikgPT4gcmVzaXplRXZlbnRMaXN0ZW5lci5jYWxsKGVsZW1lbnQsIGV2ZW50LCBlbGVtZW50KSk7XG4gIH0pO1xufVxuIl19
'use strict';

function on(eventTypes, handler) {
  var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;
  var intermediateHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  eventTypes = eventTypes.split(' '); ///

  eventTypes.forEach(function (eventType) {
    var eventListener = this.addEventListener(eventType, handler, element, intermediateHandler);

    this.domElement.addEventListener(eventType, eventListener);
  }.bind(this));
}

function off(eventTypes, handler) {
  var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;

  eventTypes = eventTypes.split(' '); ///

  eventTypes.forEach(function (eventType) {
    var eventListener = this.removeEventListener(eventType, handler, element);

    this.domElement.removeEventListener(eventType, eventListener);
  }.bind(this));
}

module.exports = {
  on: on,
  off: off,
  addEventListener: addEventListener,
  removeEventListener: removeEventListener
};

function addEventListener(eventType, handler, element, intermediateHandler) {
  if (!this.hasOwnProperty('eventListeners')) {
    this.eventListeners = [];
  }

  var targetElement = this,
      ///
  eventListeners = this.eventListeners,
      eventListener = createEventListener(targetElement, eventType, handler, element, intermediateHandler);

  eventListeners.push(eventListener);

  return eventListener;
}

function removeEventListener(eventType, handler, element) {
  var eventListeners = this.eventListeners,
      eventListener = findEventListener(eventListeners, eventType, handler, element),
      index = eventListeners.indexOf(eventListener),
      start = index,
      ///
  deleteCount = 1;

  eventListeners.splice(start, deleteCount);

  if (eventListeners.length === 0) {
    delete this.eventListeners;
  }

  return eventListener;
}

function createEventListener(targetElement, eventType, handler, element, intermediateHandler) {
  var eventListener = void 0;

  if (intermediateHandler === null) {
    eventListener = function eventListener(event) {
      handler.call(element, event, targetElement);
    };
  } else {
    eventListener = function eventListener(event) {
      intermediateHandler(function (event) {
        handler.call.apply(handler, [element].concat(Array.prototype.slice.call(arguments)));
      }, event, targetElement);
    };
  }

  Object.assign(eventListener, {
    eventType: eventType,
    handler: handler,
    element: element
  });

  return eventListener;
}

function findEventListener(eventListeners, eventType, handler, element) {
  var eventListener = eventListeners.find(function (eventListener) {
    var found = eventListener.element === element && eventListener.handler === handler && eventListener.eventType === eventType; ///

    return found;
  });

  return eventListener;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbnMvZXZlbnQuanMiXSwibmFtZXMiOlsib24iLCJldmVudFR5cGVzIiwiaGFuZGxlciIsImVsZW1lbnQiLCJpbnRlcm1lZGlhdGVIYW5kbGVyIiwic3BsaXQiLCJmb3JFYWNoIiwiZXZlbnRUeXBlIiwiZXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJkb21FbGVtZW50IiwiYmluZCIsIm9mZiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGFzT3duUHJvcGVydHkiLCJldmVudExpc3RlbmVycyIsInRhcmdldEVsZW1lbnQiLCJjcmVhdGVFdmVudExpc3RlbmVyIiwicHVzaCIsImZpbmRFdmVudExpc3RlbmVyIiwiaW5kZXgiLCJpbmRleE9mIiwic3RhcnQiLCJkZWxldGVDb3VudCIsInNwbGljZSIsImxlbmd0aCIsImV2ZW50IiwiY2FsbCIsImFyZ3VtZW50cyIsIk9iamVjdCIsImFzc2lnbiIsImZpbmQiLCJmb3VuZCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsRUFBVCxDQUFZQyxVQUFaLEVBQXdCQyxPQUF4QixFQUE2RTtBQUFBLE1BQTVDQyxPQUE0Qyx1RUFBbEMsSUFBa0M7QUFBQSxNQUE1QkMsbUJBQTRCLHVFQUFOLElBQU07O0FBQzNFSCxlQUFhQSxXQUFXSSxLQUFYLENBQWlCLEdBQWpCLENBQWIsQ0FEMkUsQ0FDdkM7O0FBRXBDSixhQUFXSyxPQUFYLENBQW1CLFVBQVNDLFNBQVQsRUFBb0I7QUFDckMsUUFBTUMsZ0JBQWdCLEtBQUtDLGdCQUFMLENBQXNCRixTQUF0QixFQUFpQ0wsT0FBakMsRUFBMENDLE9BQTFDLEVBQW1EQyxtQkFBbkQsQ0FBdEI7O0FBRUEsU0FBS00sVUFBTCxDQUFnQkQsZ0JBQWhCLENBQWlDRixTQUFqQyxFQUE0Q0MsYUFBNUM7QUFDRCxHQUprQixDQUlqQkcsSUFKaUIsQ0FJWixJQUpZLENBQW5CO0FBS0Q7O0FBRUQsU0FBU0MsR0FB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Z0JTLGVBQWVnQixJQUFmLENBQW9CLFVBQVN6QixhQUFULEVBQXdCO0FBQ2hFLFFBQU0wQixRQUFXMUIsY0FBY0wsT0FBZCxLQUEwQkEsT0FBM0IsSUFDQ0ssY0FBY04sT0FBZCxLQUEwQkEsT0FEM0IsSUFFQ00sY0FBY0QsU0FBZCxLQUE0QkEsU0FGN0MsQ0FEZ0UsQ0FHSjs7QUFFNUQsV0FBTzJCLEtBQVA7QUFDRCxHQU5xQixDQUF0Qjs7QUFRQSxTQUFPMUIsYUFBUDtBQUNEIiwiZmlsZSI6ImV2ZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBvbihldmVudFR5cGVzLCBoYW5kbGVyLCBlbGVtZW50ID0gdGhpcywgaW50ZXJtZWRpYXRlSGFuZGxlciA9IG51bGwpIHtcbiAgZXZlbnRUeXBlcyA9IGV2ZW50VHlwZXMuc3BsaXQoJyAnKTsgLy8vXG5cbiAgZXZlbnRUeXBlcy5mb3JFYWNoKGZ1bmN0aW9uKGV2ZW50VHlwZSkge1xuICAgIGNvbnN0IGV2ZW50TGlzdGVuZXIgPSB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbiAgICBcbiAgICB0aGlzLmRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGV2ZW50TGlzdGVuZXIpO1xuICB9LmJpbmQodGhpcykpO1xufVxuXG5mdW5jdGlvbiBvZmYoZXZlbnRUeXBlcywgaGFuZGxlciwgZWxlbWVudCA9IHRoaXMpIHtcbiAgZXZlbnRUeXBlcyA9IGV2ZW50VHlwZXMuc3BsaXQoJyAnKTsgLy8vXG5cbiAgZXZlbnRUeXBlcy5mb3JFYWNoKGZ1bmN0aW9uKGV2ZW50VHlwZSkge1xuICAgIGNvbnN0IGV2ZW50TGlzdGVuZXIgPSB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KTtcblxuICAgIHRoaXMuZG9tRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZXZlbnRMaXN0ZW5lcik7XG4gIH0uYmluZCh0aGlzKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBvbixcbiAgb2ZmLFxuICBhZGRFdmVudExpc3RlbmVyLFxuICByZW1vdmVFdmVudExpc3RlbmVyXG59O1xuXG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoJ2V2ZW50TGlzdGVuZXJzJykpIHtcbiAgICB0aGlzLmV2ZW50TGlzdGVuZXJzID0gW107XG4gIH1cbiAgXG4gIGNvbnN0IHRhcmdldEVsZW1lbnQgPSB0aGlzLCAvLy9cbiAgICAgICAgZXZlbnRMaXN0ZW5lcnMgPSB0aGlzLmV2ZW50TGlzdGVuZXJzLFxuICAgICAgICBldmVudExpc3RlbmVyID0gY3JlYXRlRXZlbnRMaXN0ZW5lcih0YXJnZXRFbGVtZW50LCBldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xuXG4gIGV2ZW50TGlzdGVuZXJzLnB1c2goZXZlbnRMaXN0ZW5lcik7XG5cbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGV2ZW50TGlzdGVuZXJzID0gdGhpcy5ldmVudExpc3RlbmVycyxcbiAgICAgICAgZXZlbnRMaXN0ZW5lciA9IGZpbmRFdmVudExpc3RlbmVyKGV2ZW50TGlzdGVuZXJzLCBldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQpLFxuICAgICAgICBpbmRleCA9IGV2ZW50TGlzdGVuZXJzLmluZGV4T2YoZXZlbnRMaXN0ZW5lciksXG4gICAgICAgIHN0YXJ0ID0gaW5kZXgsICAvLy9cbiAgICAgICAgZGVsZXRlQ291bnQgPSAxO1xuXG4gIGV2ZW50TGlzdGVuZXJzLnNwbGljZShzdGFydCwgZGVsZXRlQ291bnQpO1xuXG4gIGlmIChldmVudExpc3RlbmVycy5sZW5ndGggPT09IDApIHtcbiAgICBkZWxldGUgdGhpcy5ldmVudExpc3RlbmVycztcbiAgfVxuICBcbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50TGlzdGVuZXIodGFyZ2V0RWxlbWVudCwgZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIGxldCBldmVudExpc3RlbmVyO1xuICBcbiAgaWYgKGludGVybWVkaWF0ZUhhbmRsZXIgPT09IG51bGwpIHtcbiAgICBldmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIGhhbmRsZXIuY2FsbChlbGVtZW50LCBldmVudCwgdGFyZ2V0RWxlbWVudClcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIGV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgaW50ZXJtZWRpYXRlSGFuZGxlcihmdW5jdGlvbihldmVudCkge1xuICAgICAgICBoYW5kbGVyLmNhbGwoZWxlbWVudCwgLi4uYXJndW1lbnRzKTtcbiAgICAgIH0sIGV2ZW50LCB0YXJnZXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICBPYmplY3QuYXNzaWduKGV2ZW50TGlzdGVuZXIsIHtcbiAgICBldmVudFR5cGUsXG4gICAgaGFuZGxlcixcbiAgICBlbGVtZW50XG4gIH0pO1xuXG4gIHJldHVybiBldmVudExpc3RlbmVyO1xufVxuXG5mdW5jdGlvbiBmaW5kRXZlbnRMaXN0ZW5lcihldmVudExpc3RlbmVycywgZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGV2ZW50TGlzdGVuZXIgPSBldmVudExpc3RlbmVycy5maW5kKGZ1bmN0aW9uKGV2ZW50TGlzdGVuZXIpIHtcbiAgICBjb25zdCBmb3VuZCA9ICggKGV2ZW50TGlzdGVuZXIuZWxlbWVudCA9PT0gZWxlbWVudCkgJiZcbiAgICAgICAgICAgICAgICAgICAgKGV2ZW50TGlzdGVuZXIuaGFuZGxlciA9PT0gaGFuZGxlcikgJiYgXG4gICAgICAgICAgICAgICAgICAgIChldmVudExpc3RlbmVyLmV2ZW50VHlwZSA9PT0gZXZlbnRUeXBlKSApOyAgLy8vXG4gICAgXG4gICAgcmV0dXJuIGZvdW5kO1xuICB9KTtcbiAgXG4gIHJldHVybiBldmVudExpc3RlbmVyO1xufVxuIl19
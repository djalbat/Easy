'use strict';

function on(eventTypes, handler) {
  var object = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var intermediateHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  eventTypes = eventTypes.split(' '); ///

  eventTypes.forEach(function (eventType) {
    var eventListener = this.addEventListener(eventType, handler, object, intermediateHandler);

    this.domElement.addEventListener(eventType, eventListener);
  }.bind(this));
}

function off(eventTypes, handler) {
  var object = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  eventTypes = eventTypes.split(' '); ///

  eventTypes.forEach(function (eventType) {
    var eventListener = this.removeEventListener(eventType, handler, object);

    this.domElement.removeEventListener(eventType, eventListener);
  }.bind(this));
}

module.exports = {
  on: on,
  off: off,
  addEventListener: addEventListener,
  removeEventListener: removeEventListener
};

function addEventListener(eventType, handler, object, intermediateHandler) {
  if (!this.hasOwnProperty('eventListeners')) {
    this.eventListeners = [];
  }

  var targetElement = this,
      ///
  eventListeners = this.eventListeners,
      eventListener = createEventListener(targetElement, eventType, handler, object, intermediateHandler);

  eventListeners.push(eventListener);

  return eventListener;
}

function removeEventListener(eventType, handler, object) {
  var eventListeners = this.eventListeners,
      eventListener = findEventListener(eventListeners, eventType, handler, object),
      index = eventListeners.indexOf(eventListener),
      start = index,
      ///
  deleteCount = 1;

  eventListeners.splice(start, deleteCount);

  if (eventListeners.length === 0) {
    delete this.eventListeners;
  }

  return eventListener;
}

function createEventListener(targetElement, eventType, handler, object, intermediateHandler) {
  var eventListener = void 0;

  if (intermediateHandler === null) {
    eventListener = function eventListener(event) {
      handler.call(object, event, targetElement);
    };
  } else {
    eventListener = function eventListener(event) {
      intermediateHandler(function (event) {
        handler.call.apply(handler, [object].concat(Array.prototype.slice.call(arguments)));
      }, event, targetElement);
    };
  }

  Object.assign(eventListener, {
    eventType: eventType,
    handler: handler,
    object: object
  });

  return eventListener;
}

function findEventListener(eventListeners, eventType, handler, object) {
  var eventListener = eventListeners.find(function (eventListener) {
    var found = eventListener.object === object && eventListener.handler === handler && eventListener.eventType === eventType; ///

    return found;
  });

  return eventListener;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbnMvZXZlbnQuanMiXSwibmFtZXMiOlsib24iLCJldmVudFR5cGVzIiwiaGFuZGxlciIsIm9iamVjdCIsImludGVybWVkaWF0ZUhhbmRsZXIiLCJzcGxpdCIsImZvckVhY2giLCJldmVudFR5cGUiLCJldmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRvbUVsZW1lbnQiLCJiaW5kIiwib2ZmIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm1vZHVsZSIsImV4cG9ydHMiLCJoYXNPd25Qcm9wZXJ0eSIsImV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0RWxlbWVudCIsImNyZWF0ZUV2ZW50TGlzdGVuZXIiLCJwdXNoIiwiZmluZEV2ZW50TGlzdGVuZXIiLCJpbmRleCIsImluZGV4T2YiLCJzdGFydCIsImRlbGV0ZUNvdW50Iiwic3BsaWNlIiwibGVuZ3RoIiwiZXZlbnQiLCJjYWxsIiwiYXJndW1lbnRzIiwiT2JqZWN0IiwiYXNzaWduIiwiZmluZCIsImZvdW5kIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxFQUFULENBQVlDLFVBQVosRUFBd0JDLE9BQXhCLEVBQTRFO0FBQUEsTUFBM0NDLE1BQTJDLHVFQUFsQyxJQUFrQztBQUFBLE1BQTVCQyxtQkFBNEIsdUVBQU4sSUFBTTs7QUFDMUVILGVBQWFBLFdBQVdJLEtBQVgsQ0FBaUIsR0FBakIsQ0FBYixDQUQwRSxDQUN0Qzs7QUFFcENKLGFBQVdLLE9BQVgsQ0FBbUIsVUFBU0MsU0FBVCxFQUFvQjtBQUNyQyxRQUFNQyxnQkFBZ0IsS0FBS0MsZ0JBQUwsQ0FBc0JGLFNBQXRCLEVBQWlDTCxPQUFqQyxFQUEwQ0MsTUFBMUMsRUFBa0RDLG1CQUFsRCxDQUF0Qjs7QUFFQSxTQUFLTSxVQUFMLENBQWdCRCxnQkFBaEIsQ0FBaUNGLFNBQWpDLEVBQTRDQyxhQUE1QztBQUNELEdBSmtCLENBSWpCRyxJQUppQixDQUlaLElBSlksQ0FBbkI7QUFLRDs7QUFFRCxTQUFTQyxHQUFU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T0FBdEQsRUFBK0RDLE1BQS9ELEVBQXVFO0FBQ3JFLE1BQU1LLGdCQUFnQlMsZUFBZWdCLElBQWYsQ0FBb0IsVUFBU3pCLGFBQVQsRUFBd0I7QUFDaEUsUUFBTTBCLFFBQVcxQixjQUFjTCxNQUFkLEtBQXlCQSxNQUExQixJQUNDSyxjQUFjTixPQUFkLEtBQTBCQSxPQUQzQixJQUVDTSxjQUFjRCxTQUFkLEtBQTRCQSxTQUY3QyxDQURnRSxDQUdKOztBQUU1RCxXQUFPMkIsS0FBUDtBQUNELEdBTnFCLENBQXRCOztBQVFBLFNBQU8xQixhQUFQO0FBQ0QiLCJmaWxlIjoiZXZlbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9uKGV2ZW50VHlwZXMsIGhhbmRsZXIsIG9iamVjdCA9IG51bGwsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBudWxsKSB7XG4gIGV2ZW50VHlwZXMgPSBldmVudFR5cGVzLnNwbGl0KCcgJyk7IC8vL1xuXG4gIGV2ZW50VHlwZXMuZm9yRWFjaChmdW5jdGlvbihldmVudFR5cGUpIHtcbiAgICBjb25zdCBldmVudExpc3RlbmVyID0gdGhpcy5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgb2JqZWN0LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbiAgICBcbiAgICB0aGlzLmRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGV2ZW50TGlzdGVuZXIpO1xuICB9LmJpbmQodGhpcykpO1xufVxuXG5mdW5jdGlvbiBvZmYoZXZlbnRUeXBlcywgaGFuZGxlciwgb2JqZWN0ID0gbnVsbCkge1xuICBldmVudFR5cGVzID0gZXZlbnRUeXBlcy5zcGxpdCgnICcpOyAvLy9cblxuICBldmVudFR5cGVzLmZvckVhY2goZnVuY3Rpb24oZXZlbnRUeXBlKSB7XG4gICAgY29uc3QgZXZlbnRMaXN0ZW5lciA9IHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIG9iamVjdCk7XG5cbiAgICB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGV2ZW50TGlzdGVuZXIpO1xuICB9LmJpbmQodGhpcykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgb246IG9uLFxuICBvZmY6IG9mZixcbiAgYWRkRXZlbnRMaXN0ZW5lcjogYWRkRXZlbnRMaXN0ZW5lcixcbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogcmVtb3ZlRXZlbnRMaXN0ZW5lclxufTtcblxuZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIG9iamVjdCwgaW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoJ2V2ZW50TGlzdGVuZXJzJykpIHtcbiAgICB0aGlzLmV2ZW50TGlzdGVuZXJzID0gW107XG4gIH1cbiAgXG4gIGNvbnN0IHRhcmdldEVsZW1lbnQgPSB0aGlzLCAvLy9cbiAgICAgICAgZXZlbnRMaXN0ZW5lcnMgPSB0aGlzLmV2ZW50TGlzdGVuZXJzLFxuICAgICAgICBldmVudExpc3RlbmVyID0gY3JlYXRlRXZlbnRMaXN0ZW5lcih0YXJnZXRFbGVtZW50LCBldmVudFR5cGUsIGhhbmRsZXIsIG9iamVjdCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG5cbiAgZXZlbnRMaXN0ZW5lcnMucHVzaChldmVudExpc3RlbmVyKTtcblxuICByZXR1cm4gZXZlbnRMaXN0ZW5lcjtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIG9iamVjdCkge1xuICBjb25zdCBldmVudExpc3RlbmVycyA9IHRoaXMuZXZlbnRMaXN0ZW5lcnMsXG4gICAgICAgIGV2ZW50TGlzdGVuZXIgPSBmaW5kRXZlbnRMaXN0ZW5lcihldmVudExpc3RlbmVycywgZXZlbnRUeXBlLCBoYW5kbGVyLCBvYmplY3QpLFxuICAgICAgICBpbmRleCA9IGV2ZW50TGlzdGVuZXJzLmluZGV4T2YoZXZlbnRMaXN0ZW5lciksXG4gICAgICAgIHN0YXJ0ID0gaW5kZXgsICAvLy9cbiAgICAgICAgZGVsZXRlQ291bnQgPSAxO1xuXG4gIGV2ZW50TGlzdGVuZXJzLnNwbGljZShzdGFydCwgZGVsZXRlQ291bnQpO1xuXG4gIGlmIChldmVudExpc3RlbmVycy5sZW5ndGggPT09IDApIHtcbiAgICBkZWxldGUgdGhpcy5ldmVudExpc3RlbmVycztcbiAgfVxuICBcbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50TGlzdGVuZXIodGFyZ2V0RWxlbWVudCwgZXZlbnRUeXBlLCBoYW5kbGVyLCBvYmplY3QsIGludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgbGV0IGV2ZW50TGlzdGVuZXI7XG4gIFxuICBpZiAoaW50ZXJtZWRpYXRlSGFuZGxlciA9PT0gbnVsbCkge1xuICAgIGV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgaGFuZGxlci5jYWxsKG9iamVjdCwgZXZlbnQsIHRhcmdldEVsZW1lbnQpXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBldmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIGludGVybWVkaWF0ZUhhbmRsZXIoZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgaGFuZGxlci5jYWxsKG9iamVjdCwgLi4uYXJndW1lbnRzKTtcbiAgICAgIH0sIGV2ZW50LCB0YXJnZXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICBPYmplY3QuYXNzaWduKGV2ZW50TGlzdGVuZXIsIHtcbiAgICBldmVudFR5cGU6IGV2ZW50VHlwZSxcbiAgICBoYW5kbGVyOiBoYW5kbGVyLFxuICAgIG9iamVjdDogb2JqZWN0XG4gIH0pO1xuXG4gIHJldHVybiBldmVudExpc3RlbmVyO1xufVxuXG5mdW5jdGlvbiBmaW5kRXZlbnRMaXN0ZW5lcihldmVudExpc3RlbmVycywgZXZlbnRUeXBlLCBoYW5kbGVyLCBvYmplY3QpIHtcbiAgY29uc3QgZXZlbnRMaXN0ZW5lciA9IGV2ZW50TGlzdGVuZXJzLmZpbmQoZnVuY3Rpb24oZXZlbnRMaXN0ZW5lcikge1xuICAgIGNvbnN0IGZvdW5kID0gKCAoZXZlbnRMaXN0ZW5lci5vYmplY3QgPT09IG9iamVjdCkgJiYgXG4gICAgICAgICAgICAgICAgICAgIChldmVudExpc3RlbmVyLmhhbmRsZXIgPT09IGhhbmRsZXIpICYmIFxuICAgICAgICAgICAgICAgICAgICAoZXZlbnRMaXN0ZW5lci5ldmVudFR5cGUgPT09IGV2ZW50VHlwZSkgKTsgIC8vL1xuICAgIFxuICAgIHJldHVybiBmb3VuZDtcbiAgfSk7XG4gIFxuICByZXR1cm4gZXZlbnRMaXN0ZW5lcjtcbn1cbiJdfQ==
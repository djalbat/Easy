"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.on = on;
exports.off = off;
exports.addEventListener = addEventListener;
exports.removeEventListener = removeEventListener;
exports.findEventListener = findEventListener;
exports.findEventListeners = findEventListeners;

function on(eventTypes, handler, element) {
  var _this = this;

  eventTypes = eventTypes.split(" "); ///

  eventTypes.forEach(function (eventType) {
    var eventListener = _this.addEventListener(eventType, handler, element);

    _this.domElement.addEventListener(eventType, eventListener);
  });
}

function off(eventTypes, handler, element) {
  var _this2 = this;

  eventTypes = eventTypes.split(" "); ///

  eventTypes.forEach(function (eventType) {
    var eventListener = _this2.removeEventListener(eventType, handler, element);

    _this2.domElement.removeEventListener(eventType, eventListener);
  });
}

function addEventListener(eventType, handler) {
  var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;

  if (!this.hasOwnProperty("eventListeners")) {
    this.eventListeners = [];
  }

  var eventListener = createEventListener(eventType, handler, element);
  this.eventListeners.push(eventListener);
  return eventListener;
}

function removeEventListener(eventType, handler) {
  var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;
  var eventListener = this.findEventListener(eventType, handler, element),
      index = this.eventListeners.indexOf(eventListener),
      start = index,
      ///
  deleteCount = 1;
  this.eventListeners.splice(start, deleteCount);

  if (this.eventListeners.length === 0) {
    delete this.eventListeners;
  }

  return eventListener;
}

function findEventListener(eventType, handler, element) {
  var eventListener = this.eventListeners.find(function (eventListener) {
    return eventListener.eventType === eventType && eventListener.handler === handler && eventListener.element === element;
  });
  return eventListener;
}

function findEventListeners(eventType) {
  var _this3 = this;

  var eventListeners = [];

  if (this.hasOwnProperty("eventListeners")) {
    this.eventListeners.forEach(function (eventListener) {
      if (eventListener.eventType === eventType) {
        var _eventListener = _eventListener;

        _this3.eventListeners.push(_eventListener);
      }
    });
  }

  return eventListeners;
}

function createEventListener(eventType, handler, element) {
  var eventListener;

  eventListener = function eventListener(event) {
    handler.call(element, event, element);
  };

  Object.assign(eventListener, {
    eventType: eventType,
    handler: handler,
    element: element
  });
  return eventListener;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50LmpzIl0sIm5hbWVzIjpbIm9uIiwiZXZlbnRUeXBlcyIsImhhbmRsZXIiLCJlbGVtZW50Iiwic3BsaXQiLCJmb3JFYWNoIiwiZXZlbnRUeXBlIiwiZXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJkb21FbGVtZW50Iiwib2ZmIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImhhc093blByb3BlcnR5IiwiZXZlbnRMaXN0ZW5lcnMiLCJjcmVhdGVFdmVudExpc3RlbmVyIiwicHVzaCIsImZpbmRFdmVudExpc3RlbmVyIiwiaW5kZXgiLCJpbmRleE9mIiwic3RhcnQiLCJkZWxldGVDb3VudCIsInNwbGljZSIsImxlbmd0aCIsImZpbmQiLCJmaW5kRXZlbnRMaXN0ZW5lcnMiLCJldmVudCIsImNhbGwiLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7QUFFTyxTQUFTQSxFQUFULENBQVlDLFVBQVosRUFBd0JDLE9BQXhCLEVBQWlDQyxPQUFqQyxFQUEwQztBQUFBOztBQUMvQ0YsRUFBQUEsVUFBVSxHQUFHQSxVQUFVLENBQUNHLEtBQVgsQ0FBaUIsR0FBakIsQ0FBYixDQUQrQyxDQUNYOztBQUVwQ0gsRUFBQUEsVUFBVSxDQUFDSSxPQUFYLENBQW1CLFVBQUNDLFNBQUQsRUFBZTtBQUNoQyxRQUFNQyxhQUFhLEdBQUcsS0FBSSxDQUFDQyxnQkFBTCxDQUFzQkYsU0FBdEIsRUFBaUNKLE9BQWpDLEVBQTBDQyxPQUExQyxDQUF0Qjs7QUFFQSxJQUFBLEtBQUksQ0FBQ00sVUFBTCxDQUFnQkQsZ0JBQWhCLENBQWlDRixTQUFqQyxFQUE0Q0MsYUFBNUM7QUFDRCxHQUpEO0FBS0Q7O0FBRU0sU0FBU0csR0FBVCxDQUFhVCxVQUFiLEVBQXlCQyxPQUF6QixFQUFrQ0MsT0FBbEMsRUFBMkM7QUFBQTs7QUFDaERGLEVBQUFBLFVBQVUsR0FBR0EsVUFBVSxDQUFDRyxLQUFYLENBQWlCLEdBQWpCLENBQWIsQ0FEZ0Qs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QUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjckIsYUFBZCxFQUE2QjtBQUMzQkQsSUFBQUEsU0FBUyxFQUFUQSxTQUQyQjtBQUUzQkosSUFBQUEsT0FBTyxFQUFQQSxPQUYyQjtBQUczQkMsSUFBQUEsT0FBTyxFQUFQQTtBQUgyQixHQUE3QjtBQU1BLFNBQU9JLGFBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gb24oZXZlbnRUeXBlcywgaGFuZGxlciwgZWxlbWVudCkge1xuICBldmVudFR5cGVzID0gZXZlbnRUeXBlcy5zcGxpdChcIiBcIik7IC8vL1xuXG4gIGV2ZW50VHlwZXMuZm9yRWFjaCgoZXZlbnRUeXBlKSA9PiB7XG4gICAgY29uc3QgZXZlbnRMaXN0ZW5lciA9IHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQpO1xuICAgIFxuICAgIHRoaXMuZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZXZlbnRMaXN0ZW5lcik7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb2ZmKGV2ZW50VHlwZXMsIGhhbmRsZXIsIGVsZW1lbnQpIHtcbiAgZXZlbnRUeXBlcyA9IGV2ZW50VHlwZXMuc3BsaXQoXCIgXCIpOyAvLy9cblxuICBldmVudFR5cGVzLmZvckVhY2goKGV2ZW50VHlwZSkgPT4ge1xuICAgIGNvbnN0IGV2ZW50TGlzdGVuZXIgPSB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KTtcblxuICAgIHRoaXMuZG9tRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZXZlbnRMaXN0ZW5lcik7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIGVsZW1lbnQgPSB0aGlzKSB7XG4gIGlmICghdGhpcy5oYXNPd25Qcm9wZXJ0eShcImV2ZW50TGlzdGVuZXJzXCIpKSB7XG4gICAgdGhpcy5ldmVudExpc3RlbmVycyA9IFtdO1xuICB9XG5cbiAgY29uc3QgZXZlbnRMaXN0ZW5lciA9IGNyZWF0ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KTtcblxuICB0aGlzLmV2ZW50TGlzdGVuZXJzLnB1c2goZXZlbnRMaXN0ZW5lcik7XG5cbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCA9IHRoaXMpIHtcbiAgY29uc3QgZXZlbnRMaXN0ZW5lciA9IHRoaXMuZmluZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBlbGVtZW50KSxcbiAgICAgICAgaW5kZXggPSB0aGlzLmV2ZW50TGlzdGVuZXJzLmluZGV4T2YoZXZlbnRMaXN0ZW5lciksXG4gICAgICAgIHN0YXJ0ID0gaW5kZXgsICAvLy9cbiAgICAgICAgZGVsZXRlQ291bnQgPSAxO1xuXG4gIHRoaXMuZXZlbnRMaXN0ZW5lcnMuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCk7XG5cbiAgaWYgKHRoaXMuZXZlbnRMaXN0ZW5lcnMubGVuZ3RoID09PSAwKSB7XG4gICAgZGVsZXRlIHRoaXMuZXZlbnRMaXN0ZW5lcnM7XG4gIH1cblxuICByZXR1cm4gZXZlbnRMaXN0ZW5lcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCkge1xuICBjb25zdCBldmVudExpc3RlbmVyID0gdGhpcy5ldmVudExpc3RlbmVycy5maW5kKChldmVudExpc3RlbmVyKSA9PiAoKGV2ZW50TGlzdGVuZXIuZXZlbnRUeXBlID09PSBldmVudFR5cGUpICYmIChldmVudExpc3RlbmVyLmhhbmRsZXIgPT09IGhhbmRsZXIpICYmIChldmVudExpc3RlbmVyLmVsZW1lbnQgPT09IGVsZW1lbnQpKSk7XG5cbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaW5kRXZlbnRMaXN0ZW5lcnMoZXZlbnRUeXBlKSB7XG4gIGNvbnN0IGV2ZW50TGlzdGVuZXJzID0gW107XG5cbiAgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoXCJldmVudExpc3RlbmVyc1wiKSkge1xuICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnMuZm9yRWFjaCgoZXZlbnRMaXN0ZW5lcikgPT4ge1xuICAgICAgaWYgKGV2ZW50TGlzdGVuZXIuZXZlbnRUeXBlID09PSBldmVudFR5cGUpIHtcbiAgICAgICAgY29uc3QgZXZlbnRMaXN0ZW5lciA9IGV2ZW50TGlzdGVuZXI7XG5cbiAgICAgICAgdGhpcy5ldmVudExpc3RlbmVycy5wdXNoKGV2ZW50TGlzdGVuZXIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXJzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgZWxlbWVudCkge1xuICBsZXQgZXZlbnRMaXN0ZW5lcjtcblxuICBldmVudExpc3RlbmVyID0gKGV2ZW50KSA9PiB7XG4gICAgaGFuZGxlci5jYWxsKGVsZW1lbnQsIGV2ZW50LCBlbGVtZW50KVxuICB9O1xuXG4gIE9iamVjdC5hc3NpZ24oZXZlbnRMaXN0ZW5lciwge1xuICAgIGV2ZW50VHlwZSxcbiAgICBoYW5kbGVyLFxuICAgIGVsZW1lbnRcbiAgfSk7XG5cbiAgcmV0dXJuIGV2ZW50TGlzdGVuZXI7XG59XG4iXX0=
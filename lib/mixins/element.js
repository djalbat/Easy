"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _array = require("../utilities/array");
var _dom = require("../utilities/dom");
function getDescendantElements(param) {
    var selector = param === void 0 ? "*" : param;
    var domNode = this.domElement, descendantDOMNodes = (0, _dom).descendantDOMNodesFromDOMNode(domNode), descendantDOMElements = (0, _dom).filterDOMNodesBySelector(descendantDOMNodes, selector), descendantElements = (0, _dom).elementsFromDOMElements(descendantDOMElements);
    return descendantElements;
}
function getChildElements(param) {
    var selector = param === void 0 ? "*" : param;
    var childDOMNodes = this.domElement.childNodes, childDOMElements = (0, _dom).filterDOMNodesBySelector(childDOMNodes, selector), childElements = (0, _dom).elementsFromDOMElements(childDOMElements);
    return childElements;
}
function getParentElement(param) {
    var selector = param === void 0 ? "*" : param;
    var parentElement = null;
    var parentDOMElement = this.domElement.parentElement;
    if (parentDOMElement !== null) {
        if (parentDOMElement.matches(selector)) {
            var parentDOMElements = [
                parentDOMElement
            ], parentElements = (0, _dom).elementsFromDOMElements(parentDOMElements), firstParentElement = (0, _array).first(parentElements);
            parentElement = firstParentElement || null;
        }
    }
    return parentElement;
}
function getAscendantElements(param) {
    var selector = param === void 0 ? "*" : param;
    var domNode = this.domElement, ascendantDOMNodes = (0, _dom).ascendantDOMNodesFromDOMNode(domNode), ascendantDOMElements = (0, _dom).filterDOMNodesBySelector(ascendantDOMNodes, selector), ascendantElements = (0, _dom).elementsFromDOMElements(ascendantDOMElements);
    return ascendantElements;
}
function getPreviousSiblingElement(param) {
    var selector = param === void 0 ? "*" : param;
    var previousSiblingElement = null;
    var previousSiblingDOMNode = this.domElement.previousSibling; ///
    if (previousSiblingDOMNode !== null && (0, _dom).domNodeMatchesSelector(previousSiblingDOMNode, selector)) {
        previousSiblingElement = previousSiblingDOMNode.__element__ || null;
    }
    return previousSiblingElement;
}
function getNextSiblingElement(param) {
    var selector = param === void 0 ? "*" : param;
    var nextSiblingElement = null;
    var nextSiblingDOMNode = this.domElement.nextSibling;
    if (nextSiblingDOMNode !== null && (0, _dom).domNodeMatchesSelector(nextSiblingDOMNode, selector)) {
        nextSiblingElement = nextSiblingDOMNode.__element__ || null;
    }
    return nextSiblingElement;
}
var elementMixins = {
    getDescendantElements: getDescendantElements,
    getChildElements: getChildElements,
    getParentElement: getParentElement,
    getAscendantElements: getAscendantElements,
    getPreviousSiblingElement: getPreviousSiblingElement,
    getNextSiblingElement: getNextSiblingElement
};
var _default = elementMixins;
exports.default = _default;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZWxlbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgZmlyc3QgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2FycmF5XCI7XG5pbXBvcnQgeyBhc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlLCBkZXNjZW5kYW50RE9NTm9kZXNGcm9tRE9NTm9kZSwgZG9tTm9kZU1hdGNoZXNTZWxlY3RvciwgZWxlbWVudHNGcm9tRE9NRWxlbWVudHMsIGZpbHRlckRPTU5vZGVzQnlTZWxlY3RvciB9IGZyb20gXCIuLi91dGlsaXRpZXMvZG9tXCI7XG5cbmZ1bmN0aW9uIGdldERlc2NlbmRhbnRFbGVtZW50cyhzZWxlY3RvciA9IFwiKlwiKSB7XG4gIGNvbnN0IGRvbU5vZGUgPSB0aGlzLmRvbUVsZW1lbnQsICAvLy9cbiAgICAgICAgZGVzY2VuZGFudERPTU5vZGVzID0gZGVzY2VuZGFudERPTU5vZGVzRnJvbURPTU5vZGUoZG9tTm9kZSksXG4gICAgICAgIGRlc2NlbmRhbnRET01FbGVtZW50cyA9IGZpbHRlckRPTU5vZGVzQnlTZWxlY3RvcihkZXNjZW5kYW50RE9NTm9kZXMsIHNlbGVjdG9yKSxcbiAgICAgICAgZGVzY2VuZGFudEVsZW1lbnRzID0gZWxlbWVudHNGcm9tRE9NRWxlbWVudHMoZGVzY2VuZGFudERPTUVsZW1lbnRzKTtcblxuICByZXR1cm4gZGVzY2VuZGFudEVsZW1lbnRzO1xufVxuXG5mdW5jdGlvbiBnZXRDaGlsZEVsZW1lbnRzKHNlbGVjdG9yID0gXCIqXCIpIHtcbiAgY29uc3QgY2hpbGRET01Ob2RlcyA9IHRoaXMuZG9tRWxlbWVudC5jaGlsZE5vZGVzLFxuICAgICAgICBjaGlsZERPTUVsZW1lbnRzID0gZmlsdGVyRE9NTm9kZXNCeVNlbGVjdG9yKGNoaWxkRE9NTm9kZXMsIHNlbGVjdG9yKSxcbiAgICAgICAgY2hpbGRFbGVtZW50cyA9IGVsZW1lbnRzRnJvbURPTUVsZW1lbnRzKGNoaWxkRE9NRWxlbWVudHMpO1xuXG4gIHJldHVybiBjaGlsZEVsZW1lbnRzO1xufVxuXG5mdW5jdGlvbiBnZXRQYXJlbnRFbGVtZW50KHNlbGVjdG9yID0gXCIqXCIpIHtcbiAgbGV0IHBhcmVudEVsZW1lbnQgPSBudWxsO1xuXG4gIGNvbnN0IHBhcmVudERPTUVsZW1lbnQgPSB0aGlzLmRvbUVsZW1lbnQucGFyZW50RWxlbWVudDtcblxuICBpZiAocGFyZW50RE9NRWxlbWVudCAhPT0gbnVsbCkge1xuICAgIGlmIChwYXJlbnRET01FbGVtZW50Lm1hdGNoZXMoc2VsZWN0b3IpKSB7XG4gICAgICBjb25zdCBwYXJlbnRET01FbGVtZW50cyA9IFtwYXJlbnRET01FbGVtZW50XSxcbiAgICAgICAgICAgIHBhcmVudEVsZW1lbnRzID0gZWxlbWVudHNGcm9tRE9NRWxlbWVudHMocGFyZW50RE9NRWxlbWVudHMpLFxuICAgICAgICAgICAgZmlyc3RQYXJlbnRFbGVtZW50ID0gZmlyc3QocGFyZW50RWxlbWVudHMpO1xuXG4gICAgICBwYXJlbnRFbGVtZW50ID0gZmlyc3RQYXJlbnRFbGVtZW50IHx8IG51bGw7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcmVudEVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGdldEFzY2VuZGFudEVsZW1lbnRzKHNlbGVjdG9yID0gXCIqXCIpIHtcbiAgY29uc3QgZG9tTm9kZSA9IHRoaXMuZG9tRWxlbWVudCwgIC8vL1xuICAgICAgICBhc2NlbmRhbnRET01Ob2RlcyA9IGFzY2VuZGFudERPTU5vZGVzRnJvbURPTU5vZGUoZG9tTm9kZSksXG4gICAgICAgIGFzY2VuZGFudERPTUVsZW1lbnRzID0gZmlsdGVyRE9NTm9kZXNCeVNlbGVjdG9yKGFzY2VuZGFudERPTU5vZGVzLCBzZWxlY3RvciksXG4gICAgICAgIGFzY2VuZGFudEVsZW1lbnRzID0gZWxlbWVudHNGcm9tRE9NRWxlbWVudHMoYXNjZW5kYW50RE9NRWxlbWVudHMpO1xuXG4gIHJldHVybiBhc2NlbmRhbnRFbGVtZW50cztcbn1cblxuZnVuY3Rpb24gZ2V0UHJldmlvdXNTaWJsaW5nRWxlbWVudChzZWxlY3RvciA9IFwiKlwiKSB7XG4gIGxldCBwcmV2aW91c1NpYmxpbmdFbGVtZW50ID0gbnVsbDtcblxuICBjb25zdCBwcmV2aW91c1NpYmxpbmdET01Ob2RlID0gdGhpcy5kb21FbGVtZW50LnByZXZpb3VzU2libGluZzsgIC8vL1xuXG4gIGlmICgocHJldmlvdXNTaWJsaW5nRE9NTm9kZSAhPT0gbnVsbCkgJiYgZG9tTm9kZU1hdGNoZXNTZWxlY3RvcihwcmV2aW91c1NpYmxpbmdET01Ob2RlLCBzZWxlY3RvcikpIHtcbiAgICBwcmV2aW91c1NpYmxpbmdFbGVtZW50ID0gcHJldmlvdXNTaWJsaW5nRE9NTm9kZS5fX2VsZW1lbnRfXyB8fCBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHByZXZpb3VzU2libGluZ0VsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGdldE5leHRTaWJsaW5nRWxlbWVudChzZWxlY3RvciA9IFwiKlwiKSB7XG4gIGxldCBuZXh0U2libGluZ0VsZW1lbnQgPSBudWxsO1xuXG4gIGNvbnN0IG5leHRTaWJsaW5nRE9NTm9kZSA9IHRoaXMuZG9tRWxlbWVudC5uZXh0U2libGluZztcblxuICBpZiAoKG5leHRTaWJsaW5nRE9NTm9kZSAhPT0gbnVsbCkgJiYgZG9tTm9kZU1hdGNoZXNTZWxlY3RvcihuZXh0U2libGluZ0RPTU5vZGUsIHNlbGVjdG9yKSkge1xuICAgIG5leHRTaWJsaW5nRWxlbWVudCA9IG5leHRTaWJsaW5nRE9NTm9kZS5fX2VsZW1lbnRfXyB8fCBudWxsO1xuICB9XG5cbiAgcmV0dXJuIG5leHRTaWJsaW5nRWxlbWVudDtcbn1cblxuY29uc3QgZWxlbWVudE1peGlucyA9IHtcbiAgZ2V0RGVzY2VuZGFudEVsZW1lbnRzLFxuICBnZXRDaGlsZEVsZW1lbnRzLFxuICBnZXRQYXJlbnRFbGVtZW50LFxuICBnZXRBc2NlbmRhbnRFbGVtZW50cyxcbiAgZ2V0UHJldmlvdXNTaWJsaW5nRWxlbWVudCxcbiAgZ2V0TmV4dFNpYmxpbmdFbGVtZW50XG59O1xuXG5leHBvcnQgZGVmYXVsdCBlbGVtZW50TWl4aW5zO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJDQUFBLFVBQVk7Ozs7O0lBRVUsTUFBb0I7SUFDNkcsSUFBa0I7U0FFaEsscUJBQXFCLENBQUMsS0FBYztRQUFkLFFBQVEsR0FBUixLQUFjLGVBQUgsQ0FBRyxJQUFkLEtBQWM7UUFDckMsT0FBTyxRQUFRLFVBQVUsRUFDekIsa0JBQWtCLE9BSjZILElBQWtCLGdDQUk5RyxPQUFPLEdBQzFELHFCQUFxQixPQUwwSCxJQUFrQiwyQkFLaEgsa0JBQWtCLEVBQUUsUUFBUSxHQUM3RSxrQkFBa0IsT0FONkgsSUFBa0IsMEJBTXBILHFCQUFxQjtXQUVqRSxrQkFBa0I7O1NBR2xCLGdCQUFnQixDQUFDLEtBQWM7UUFBZCxRQUFRLEdBQVIsS0FBYyxlQUFILENBQUcsSUFBZCxLQUFjO1FBQ2hDLGFBQWEsUUFBUSxVQUFVLENBQUMsVUFBVSxFQUMxQyxnQkFBZ0IsT0FiK0gsSUFBa0IsMkJBYXJILGFBQWEsRUFBRSxRQUFRLEdBQ25FLGFBQWEsT0Fka0ksSUFBa0IsMEJBY3pILGdCQUFnQjtXQUV2RCxhQUFhOztTQUdiLGdCQUFnQixDQUFDLEtBQWM7UUFBZCxRQUFRLEdBQVIsS0FBYyxlQUFILENBQUcsSUFBZCxLQUFjO1FBQ2xDLGFBQWEsR0FBRyxJQUFJO1FBRWxCLGdCQUFnQixRQUFRLFVBQVUsQ0FBQyxhQUFhO1FBRWxELGdCQUFnQixLQUFLLElBQUk7WUFDdkIsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLFFBQVE7Z0JBQzdCLGlCQUFpQjtnQkFBSSxnQkFBZ0I7ZUFDckMsY0FBYyxPQTNCNkgsSUFBa0IsMEJBMkJwSCxpQkFBaUIsR0FDMUQsa0JBQWtCLE9BN0JSLE1BQW9CLFFBNkJILGNBQWM7WUFFL0MsYUFBYSxHQUFHLGtCQUFrQixJQUFJLElBQUk7OztXQUl2QyxhQUFhOztTQUdiLG9CQUFvQixDQUFDLEtBQWM7UUFBZCxRQUFRLEdBQVIsS0FBYyxlQUFILENBQUcsSUFBZCxLQUFjO1FBQ3BDLE9BQU8sUUFBUSxVQUFVLEVBQ3pCLGlCQUFpQixPQXZDOEgsSUFBa0IsK0JBdUNoSCxPQUFPLEdBQ3hELG9CQUFvQixPQXhDMkgsSUFBa0IsMkJBd0NqSCxpQkFBaUIsRUFBRSxRQUFRLEdBQzNFLGlCQUFpQixPQXpDOEgsSUFBa0IsMEJBeUNySCxvQkFBb0I7V0FFL0QsaUJBQWlCOztTQUdqQix5QkFBeUIsQ0FBQyxLQUFjO1FBQWQsUUFBUSxHQUFSLEtBQWMsZUFBSCxDQUFHLElBQWQsS0FBYztRQUMzQyxzQkFBc0IsR0FBRyxJQUFJO1FBRTNCLHNCQUFzQixRQUFRLFVBQVUsQ0FBQyxlQUFlLENBQUcsQ0FBRyxBQUFILEVBQUcsQUFBSCxDQUFHO1FBRS9ELHNCQUFzQixLQUFLLElBQUksUUFuRGlILElBQWtCLHlCQW1Edkcsc0JBQXNCLEVBQUUsUUFBUTtRQUM5RixzQkFBc0IsR0FBRyxzQkFBc0IsQ0FBQyxXQUFXLElBQUksSUFBSTs7V0FHOUQsc0JBQXNCOztTQUd0QixxQkFBcUIsQ0FBQyxLQUFjO1FBQWQsUUFBUSxHQUFSLEtBQWMsZUFBSCxDQUFHLElBQWQsS0FBYztRQUN2QyxrQkFBa0IsR0FBRyxJQUFJO1FBRXZCLGtCQUFrQixRQUFRLFVBQVUsQ0FBQyxXQUFXO1FBRWpELGtCQUFrQixLQUFLLElBQUksUUEvRHFILElBQWtCLHlCQStEM0csa0JBQWtCLEVBQUUsUUFBUTtRQUN0RixrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQyxXQUFXLElBQUksSUFBSTs7V0FHdEQsa0JBQWtCOztJQUdyQixhQUFhO0lBQ2pCLHFCQUFxQixFQUFyQixxQkFBcUI7SUFDckIsZ0JBQWdCLEVBQWhCLGdCQUFnQjtJQUNoQixnQkFBZ0IsRUFBaEIsZ0JBQWdCO0lBQ2hCLG9CQUFvQixFQUFwQixvQkFBb0I7SUFDcEIseUJBQXlCLEVBQXpCLHlCQUF5QjtJQUN6QixxQkFBcUIsRUFBckIscUJBQXFCOztlQUdSLGFBQWEifQ==
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onMouseUp = onMouseUp;
exports.onMouseDown = onMouseDown;
exports.onMouseOver = onMouseOver;
exports.onMouseOut = onMouseOut;
exports.onMouseMove = onMouseMove;
exports.offMouseUp = offMouseUp;
exports.offMouseDown = offMouseDown;
exports.offMouseOver = offMouseOver;
exports.offMouseOut = offMouseOut;
exports.offMouseMove = offMouseMove;

function onMouseUp(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on("mouseup", handler, element, intermediateHandler);
}

function onMouseDown(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on("mousedown", handler, element, intermediateHandler);
}

function onMouseOver(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on("mouseover", handler, element, intermediateHandler);
}

function onMouseOut(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on("mouseout", handler, element, intermediateHandler);
}

function onMouseMove(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on("mousemove", handler, element, intermediateHandler);
}

function offMouseUp(handler, element) {
  this.off("mouseup", handler, element);
}

function offMouseDown(handler, element) {
  this.off("mousedown", handler, element);
}

function offMouseOver(handler, element) {
  this.off("mouseover", handler, element);
}

function offMouseOut(handler, element) {
  this.off("mouseout", handler, element);
}

function offMouseMove(handler, element) {
  this.off("mousemove", handler, element);
}

function defaultIntermediateHandler(handler, event, element) {
  var pageY = event.pageY,
      pageX = event.pageX,
      button = event.button,
      mouseTop = pageY,
      mouseLeft = pageX,
      mouseButton = button; ///

  handler.call(element, mouseTop, mouseLeft, mouseButton, event, element);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdXNlLmpzIl0sIm5hbWVzIjpbIm9uTW91c2VVcCIsImhhbmRsZXIiLCJlbGVtZW50IiwiaW50ZXJtZWRpYXRlSGFuZGxlciIsImRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyIiwib24iLCJvbk1vdXNlRG93biIsIm9uTW91c2VPdmVyIiwib25Nb3VzZU91dCIsIm9uTW91c2VNb3ZlIiwib2ZmTW91c2VVcCIsIm9mZiIsIm9mZk1vdXNlRG93biIsIm9mZk1vdXNlT3ZlciIsIm9mZk1vdXNlT3V0Iiwib2ZmTW91c2VNb3ZlIiwiZXZlbnQiLCJwYWdlWSIsInBhZ2VYIiwiYnV0dG9uIiwibW91c2VUb3AiLCJtb3VzZUxlZnQiLCJtb3VzZUJ1dHRvbiIsImNhbGwiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRU8sU0FBU0EsU0FBVCxDQUFtQkMsT0FBbkIsRUFBNEJDLE9BQTVCLEVBQXVGO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0QjtBQUM1RixPQUFLQyxFQUFMLENBQVEsU0FBUixFQUFtQkosT0FBbkIsRUFBNEJDLE9BQTVCLEVBQXFDQyxtQkFBckM7QUFDRDs7QUFFTSxTQUFTRyxXQUFULENBQXFCTCxPQUFyQixFQUE4QkMsT0FBOUIsRUFBeUY7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCO0FBQzlGLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSixPQUFyQixFQUE4QkMsT0FBOUIsRUFBdUNDLG1CQUF2QztBQUNEOztBQUVNLFNBQVNJLFdBQVQsQ0FBcUJOLE9BQXJCLEVBQThCQyxPQUE5QixFQUF5RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7QUFDOUYsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJKLE9BQXJCLEVBQThCQyxPQUE5QixFQUF1Q0MsbUJBQXZDO0FBQ0Q7O0FBRU0sU0FBU0ssVUFBVCxDQUFvQlAsT0FBcEIsRUFBNkJDLE9BQTdCLEVBQXdGO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0QjtBQUM3RixPQUFLQyxFQUFMLENBQVEsVUFBUixFQUFvQkosT0FBcEIsRUFBNkJDLE9BQTdCLEVBQXNDQyxtQkFBdEM7QUFDRDs7QUFFTSxTQUFTTSxXQUFULENBQXFCUixPQUFyQixFQUE4QkMsT0FBOUIsRUFBeUY7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCO0FBQzlGLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSixPQUFyQixFQUE4QkMsT0FBOUIsRUFBdUNDLG1CQUF2QztBQUNEOztBQUVNLFNBQVNPLFVBQVQsQ0FBb0JULE9BQXBCLEVBQTZCQyxPQUE3QixFQUFzQztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxTQUFULEVBQW9CVixPQUFwQixFQUE2QkMsT0FBN0I7QUFBd0M7O0FBRWhGLFNBQVNVLFlBQVQsQ0FBc0JYLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxXQUFULEVBQXNCVixPQUF0QixFQUErQkMsT0FBL0I7QUFBMEM7O0FBRXBGLFNBQVNXLFlBQVQsQ0FBc0JaLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxXQUFULEVBQXNCVixPQUF0QixFQUErQkMsT0FBL0I7QUFBMEM7O0FBRXBGLFNBQVNZLFdBQVQsQ0FBcUJiLE9BQXJCLEVBQThCQyxPQUE5QixFQUF1QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxVQUFULEVBQXFCVixPQUFyQixFQUE4QkMsT0FBOUI7QUFBeUM7O0FBRWxGLFNBQVNhLFlBQVQsQ0FBc0JkLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxXQUFULEVBQXNCVixPQUF0QixFQUErQkMsT0FBL0I7QUFBMEM7O0FBRTNGLFNBQVNFLDBCQUFULENBQW9DSCxPQUFwQyxFQUE2Q2UsS0FBN0MsRUFBb0RkLE9BQXBELEVBQTZEO0FBQUEsTUFDbkRlLEtBRG1ELEdBQzFCRCxLQUQwQixDQUNuREMsS0FEbUQ7QUFBQSxNQUM1Q0MsS0FENEMsR0FDMUJGLEtBRDBCLENBQzVDRSxLQUQ0QztBQUFBLE1BQ3JDQyxNQURxQyxHQUMxQkgsS0FEMEIsQ0FDckNHLE1BRHFDO0FBQUEsTUFFekRDLFFBRnlELEdBRTlDSCxLQUY4QztBQUFBLE1BR3JESSxTQUhxRCxHQUd6Q0gsS0FIeUM7QUFBQSxNQUlyREksV0FKcUQsR0FJdkNILE1BSnVDLEVBSS9COztBQUU1QmxCLEVBQUFBLE9BQU8sQ0FBQ3NCLElBQVIsQ0FBYXJCLE9BQWIsRUFBc0JrQixRQUF0QixFQUFnQ0MsU0FBaEMsRUFBMkNDLFdBQTNDLEVBQXdETixLQUF4RCxFQUErRGQsT0FBL0Q7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gb25Nb3VzZVVwKGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKFwibW91c2V1cFwiLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTW91c2VEb3duKGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKFwibW91c2Vkb3duXCIsIGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb25Nb3VzZU92ZXIoaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oXCJtb3VzZW92ZXJcIiwgaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbk1vdXNlT3V0KGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKFwibW91c2VvdXRcIiwgaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbk1vdXNlTW92ZShoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbihcIm1vdXNlbW92ZVwiLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9mZk1vdXNlVXAoaGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihcIm1vdXNldXBcIiwgaGFuZGxlciwgZWxlbWVudCk7IH1cblxuZXhwb3J0IGZ1bmN0aW9uIG9mZk1vdXNlRG93bihoYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKFwibW91c2Vkb3duXCIsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBvZmZNb3VzZU92ZXIoaGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihcIm1vdXNlb3ZlclwiLCBoYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5leHBvcnQgZnVuY3Rpb24gb2ZmTW91c2VPdXQoaGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihcIm1vdXNlb3V0XCIsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmV4cG9ydCBmdW5jdGlvbiBvZmZNb3VzZU1vdmUoaGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZihcIm1vdXNlbW92ZVwiLCBoYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcihoYW5kbGVyLCBldmVudCwgZWxlbWVudCkge1xuICBjb25zdCB7IHBhZ2VZLCBwYWdlWCwgYnV0dG9uIH0gPSBldmVudCxcblx0XHRcdFx0bW91c2VUb3AgPSBwYWdlWSwgIC8vL1xuICAgICAgICBtb3VzZUxlZnQgPSBwYWdlWCwgLy8vXG4gICAgICAgIG1vdXNlQnV0dG9uID0gYnV0dG9uOyAvLy9cbiAgXG4gIGhhbmRsZXIuY2FsbChlbGVtZW50LCBtb3VzZVRvcCwgbW91c2VMZWZ0LCBtb3VzZUJ1dHRvbiwgZXZlbnQsIGVsZW1lbnQpO1xufVxuIl19
'use strict';

function onMouseUp(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('mouseup', handler, element, intermediateHandler);
}

function onMouseDown(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('mousedown', handler, element, intermediateHandler);
}

function onMouseOver(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('mouseover', handler, element, intermediateHandler);
}

function onMouseOut(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('mouseout', handler, element, intermediateHandler);
}

function onMouseMove(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('mousemove', handler, element, intermediateHandler);
}

function offMouseUp(handler, element) {
  this.off('mouseup', handler, element);
}

function offMouseDown(handler, element) {
  this.off('mousedown', handler, element);
}

function offMouseOver(handler, element) {
  this.off('mouseover', handler, element);
}

function offMouseOut(handler, element) {
  this.off('mouseout', handler, element);
}

function offMouseMove(handler, element) {
  this.off('mousemove', handler, element);
}

module.exports = {
  onMouseUp: onMouseUp,
  onMouseDown: onMouseDown,
  onMouseOver: onMouseOver,
  onMouseOut: onMouseOut,
  onMouseMove: onMouseMove,
  offMouseUp: offMouseUp,
  offMouseDown: offMouseDown,
  offMouseOver: offMouseOver,
  offMouseOut: offMouseOut,
  offMouseMove: offMouseMove
};

function defaultIntermediateHandler(handler, event, element) {
  var pageY = event.pageY,
      pageX = event.pageX,
      button = event.button,
      mouseTop = pageY,
      mouseLeft = pageX,
      mouseButton = button; ///

  handler.call(element, mouseTop, mouseLeft, mouseButton, event, element);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbnMvbW91c2UuanMiXSwibmFtZXMiOlsib25Nb3VzZVVwIiwiaGFuZGxlciIsImVsZW1lbnQiLCJpbnRlcm1lZGlhdGVIYW5kbGVyIiwiZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIiLCJvbiIsIm9uTW91c2VEb3duIiwib25Nb3VzZU92ZXIiLCJvbk1vdXNlT3V0Iiwib25Nb3VzZU1vdmUiLCJvZmZNb3VzZVVwIiwib2ZmIiwib2ZmTW91c2VEb3duIiwib2ZmTW91c2VPdmVyIiwib2ZmTW91c2VPdXQiLCJvZmZNb3VzZU1vdmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiZXZlbnQiLCJwYWdlWSIsInBhZ2VYIiwiYnV0dG9uIiwibW91c2VUb3AiLCJtb3VzZUxlZnQiLCJtb3VzZUJ1dHRvbiIsImNhbGwiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLFNBQVNBLFNBQVQsQ0FBbUJDLE9BQW5CLEVBQTRCQyxPQUE1QixFQUF1RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7O0FBQ3JGLE9BQUtDLEVBQUwsQ0FBUSxTQUFSLEVBQW1CSixPQUFuQixFQUE0QkMsT0FBNUIsRUFBcUNDLG1CQUFyQztBQUNEOztBQUVELFNBQVNHLFdBQVQsQ0FBcUJMLE9BQXJCLEVBQThCQyxPQUE5QixFQUF5RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7O0FBQ3ZGLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSixPQUFyQixFQUE4QkMsT0FBOUIsRUFBdUNDLG1CQUF2QztBQUNEOztBQUVELFNBQVNJLFdBQVQsQ0FBcUJOLE9BQXJCLEVBQThCQyxPQUE5QixFQUF5RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7O0FBQ3ZGLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSixPQUFyQixFQUE4QkMsT0FBOUIsRUFBdUNDLG1CQUF2QztBQUNEOztBQUVELFNBQVNLLFVBQVQsQ0FBb0JQLE9BQXBCLEVBQTZCQyxPQUE3QixFQUF3RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7O0FBQ3RGLE9BQUtDLEVBQUwsQ0FBUSxVQUFSLEVBQW9CSixPQUFwQixFQUE2QkMsT0FBN0IsRUFBc0NDLG1CQUF0QztBQUNEOztBQUVELFNBQVNNLFdBQVQsQ0FBcUJSLE9BQXJCLEVBQThCQyxPQUE5QixFQUF5RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7O0FBQ3ZGLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSixPQUFyQixFQUE4QkMsT0FBOUIsRUFBdUNDLG1CQUF2QztBQUNEOztBQUVELFNBQVNPLFVBQVQsQ0FBb0JULE9BQXBCLEVBQTZCQyxPQUE3QixFQUFzQztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxTQUFULEVBQW9CVixPQUFwQixFQUE2QkMsT0FBN0I7QUFBd0M7O0FBRWhGLFNBQVNVLFlBQVQsQ0FBc0JYLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxXQUFULEVBQXNCVixPQUF0QixFQUErQkMsT0FBL0I7QUFBMEM7O0FBRXBGLFNBQVNXLFlBQVQsQ0FBc0JaLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxXQUFULEVBQXNCVixPQUF0QixFQUErQkMsT0FBL0I7QUFBMEM7O0FBRXBGLFNBQVNZLFdBQVQsQ0FBcUJiLE9BQXJCLEVBQThCQyxPQUE5QixFQUF1QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxVQUFULEVBQXFCVixPQUFyQixFQUE4QkMsT0FBOUI7QUFBeUM7O0FBRWxGLFNBQVNhLFlBQVQsQ0FBc0JkLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUFFLE9BQUtTLEdBQUwsQ0FBUyxXQUFULEVBQXNCVixPQUF0QixFQUErQkMsT0FBL0I7QUFBMEM7O0FBRXBGYyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZqQixzQkFEZTtBQUVmTSwwQkFGZTtBQUdmQywwQkFIZTtBQUlmQyx3QkFKZTtBQUtmQywwQkFMZTtBQU1mQyx3QkFOZTtBQU9mRSw0QkFQZTtBQVFmQyw0QkFSZTtBQVNmQywwQkFUZTtBQVVmQztBQVZlLENBQWpCOztBQWFBLFNBQVNYLDBCQUFULENBQW9DSCxPQUFwQyxFQUE2Q2lCLEtBQTdDLEVBQW9EaEIsT0FBcEQsRUFBNkQ7QUFBQSxNQUNuRGlCLEtBRG1ELEdBQzFCRCxLQUQwQixDQUNuREMsS0FEbUQ7QUFBQSxNQUM1Q0MsS0FENEMsR0FDMUJGLEtBRDBCLENBQzVDRSxLQUQ0QztBQUFBLE1BQ3JDQyxNQURxQyxHQUMxQkgsS0FEMEIsQ0FDckNHLE1BRHFDO0FBQUEsTUFFekRDLFFBRnlELEdBRTlDSCxLQUY4QztBQUFBLE1BR3JESSxTQUhxRCxHQUd6Q0gsS0FIeUM7QUFBQSxNQUlyREksV0FKcUQsR0FJdkNILE1BSnVDLEVBSS9COztBQUU1QnBCLFVBQVF3QixJQUFSLENBQWF2QixPQUFiLEVBQXNCb0IsUUFBdEIsRUFBZ0NDLFNBQWhDLEVBQTJDQyxXQUEzQyxFQUF3RE4sS0FBeEQsRUFBK0RoQixPQUEvRDtBQUNEIiwiZmlsZSI6Im1vdXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBvbk1vdXNlVXAoaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oJ21vdXNldXAnLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZURvd24oaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oJ21vdXNlZG93bicsIGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvbk1vdXNlT3ZlcihoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2VvdmVyJywgaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9uTW91c2VPdXQoaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oJ21vdXNlb3V0JywgaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9uTW91c2VNb3ZlKGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKCdtb3VzZW1vdmUnLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb2ZmTW91c2VVcChoYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKCdtb3VzZXVwJywgaGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VEb3duKGhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoJ21vdXNlZG93bicsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlT3ZlcihoYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKCdtb3VzZW92ZXInLCBoYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU91dChoYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKCdtb3VzZW91dCcsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlTW92ZShoYW5kbGVyLCBlbGVtZW50KSB7IHRoaXMub2ZmKCdtb3VzZW1vdmUnLCBoYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgb25Nb3VzZVVwLFxuICBvbk1vdXNlRG93bixcbiAgb25Nb3VzZU92ZXIsXG4gIG9uTW91c2VPdXQsXG4gIG9uTW91c2VNb3ZlLFxuICBvZmZNb3VzZVVwLFxuICBvZmZNb3VzZURvd24sXG4gIG9mZk1vdXNlT3ZlcixcbiAgb2ZmTW91c2VPdXQsXG4gIG9mZk1vdXNlTW92ZVxufTtcblxuZnVuY3Rpb24gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIoaGFuZGxlciwgZXZlbnQsIGVsZW1lbnQpIHtcbiAgY29uc3QgeyBwYWdlWSwgcGFnZVgsIGJ1dHRvbiB9ID0gZXZlbnQsXG5cdFx0XHRcdG1vdXNlVG9wID0gcGFnZVksICAvLy9cbiAgICAgICAgbW91c2VMZWZ0ID0gcGFnZVgsIC8vL1xuICAgICAgICBtb3VzZUJ1dHRvbiA9IGJ1dHRvbjsgLy8vXG4gIFxuICBoYW5kbGVyLmNhbGwoZWxlbWVudCwgbW91c2VUb3AsIG1vdXNlTGVmdCwgbW91c2VCdXR0b24sIGV2ZW50LCBlbGVtZW50KTtcbn1cbiJdfQ==
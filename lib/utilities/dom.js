"use strict";

var _array = require("../utilities/array");

function domElementFromSelector(selector) {
  var domElement = typeof selector === "string" ? document.querySelector(selector) : selector; ///

  return domElement;
}

function elementsFromDOMElements(domElements) {
  var domElementsWithElements = filterDOMNodes(domElements, function (domElement) {
    return domElement.__element__ !== undefined;
  }),
      elements = domElementsWithElements.map(function (domElement) {
    return domElement.__element__;
  });
  return elements;
}

function descendantDOMNodesFromDOMNode(domNode) {
  var descendantDOMNodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var start = -1,
      deleteCount = 0,
      childDOMNodes = domNode.childNodes; ///

  (0, _array.splice)(descendantDOMNodes, start, deleteCount, childDOMNodes);
  childDOMNodes.forEach(function (childDOMNode) {
    descendantDOMNodesFromDOMNode(childDOMNode, descendantDOMNodes);
  });
  return descendantDOMNodes;
}

function filterDOMNodesBySelector(domNodes, selector) {
  var filteredDOMNodes = filterDOMNodes(domNodes, function (domNode) {
    return domNodeMatchesSelector(domNode, selector);
  });
  return filteredDOMNodes;
}

function domNodeMatchesSelector(domNode, selector) {
  var domNodeType = domNode.nodeType;

  switch (domNodeType) {
    case Node.ELEMENT_NODE:
      {
        var domElement = domNode; ///

        return domElement.matches(selector);
      }

    case Node.TEXT_NODE:
      {
        if (selector === "*") {
          return true;
        }
      }
  }

  return false;
}

function filterDOMNodes(domNodes, test) {
  var filteredDOMNodes = [],
      domNodesLength = domNodes.length;

  for (var index = 0; index < domNodesLength; index++) {
    var domNode = domNodes[index],
        result = test(domNode);

    if (result) {
      filteredDOMNodes.push(domNode);
    }
  }

  return filteredDOMNodes;
}

module.exports = {
  domElementFromSelector: domElementFromSelector,
  elementsFromDOMElements: elementsFromDOMElements,
  descendantDOMNodesFromDOMNode: descendantDOMNodesFromDOMNode,
  filterDOMNodesBySelector: filterDOMNodesBySelector,
  domNodeMatchesSelector: domNodeMatchesSelector,
  filterDOMNodes: filterDOMNodes
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbS5qcyJdLCJuYW1lcyI6WyJkb21FbGVtZW50RnJvbVNlbGVjdG9yIiwic2VsZWN0b3IiLCJkb21FbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZWxlbWVudHNGcm9tRE9NRWxlbWVudHMiLCJkb21FbGVtZW50cyIsImRvbUVsZW1lbnRzV2l0aEVsZW1lbnRzIiwiZmlsdGVyRE9NTm9kZXMiLCJfX2VsZW1lbnRfXyIsInVuZGVmaW5lZCIsImVsZW1lbnRzIiwibWFwIiwiZGVzY2VuZGFudERPTU5vZGVzRnJvbURPTU5vZGUiLCJkb21Ob2RlIiwiZGVzY2VuZGFudERPTU5vZGVzIiwic3RhcnQiLCJkZWxldGVDb3VudCIsImNoaWxkRE9NTm9kZXMiLCJjaGlsZE5vZGVzIiwiZm9yRWFjaCIsImNoaWxkRE9NTm9kZSIsImZpbHRlckRPTU5vZGVzQnlTZWxlY3RvciIsImRvbU5vZGVzIiwiZmlsdGVyZWRET01Ob2RlcyIsImRvbU5vZGVNYXRjaGVzU2VsZWN0b3IiLCJkb21Ob2RlVHlwZSIsIm5vZGVUeXBlIiwiTm9kZSIsIkVMRU1FTlRfTk9ERSIsIm1hdGNoZXMiLCJURVhUX05PREUiLCJ0ZXN0IiwiZG9tTm9kZXNMZW5ndGgiLCJsZW5ndGgiLCJpbmRleCIsInJlc3VsdCIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQSxTQUFTQSxzQkFBVCxDQUFnQ0MsUUFBaEMsRUFBMEM7QUFDeEMsTUFBTUMsVUFBVSxHQUFJLE9BQU9ELFFBQVAsS0FBb0IsUUFBckIsR0FDRUUsUUFBUSxDQUFDQyxhQUFULENBQXVCSCxRQUF2QixDQURGLEdBRUlBLFFBRnZCLENBRHdDLENBR047O0FBRWxDLFNBQU9DLFVBQVA7QUFDRDs7QUFFRCxTQUFTRyx1QkFBVCxDQUFpQ0MsV0FBakMsRUFBOEM7QUFDNUMsTUFBTUMsdUJBQXVCLEdBQUdDLGNBQWMsQ0FBQ0YsV0FBRCxFQUFjLFVBQVNKLFVBQVQsRUFB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Ii4uL3V0aWxpdGllcy9hcnJheVwiO1xuXG5mdW5jdGlvbiBkb21FbGVtZW50RnJvbVNlbGVjdG9yKHNlbGVjdG9yKSB7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSAodHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiKSA/XG4gICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjsgIC8vL1xuXG4gIHJldHVybiBkb21FbGVtZW50O1xufVxuXG5mdW5jdGlvbiBlbGVtZW50c0Zyb21ET01FbGVtZW50cyhkb21FbGVtZW50cykge1xuICBjb25zdCBkb21FbGVtZW50c1dpdGhFbGVtZW50cyA9IGZpbHRlckRPTU5vZGVzKGRvbUVsZW1lbnRzLCBmdW5jdGlvbihkb21FbGVtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIChkb21FbGVtZW50Ll9fZWxlbWVudF9fICE9PSB1bmRlZmluZWQpO1xuICAgICAgICB9KSxcbiAgICAgICAgZWxlbWVudHMgPSBkb21FbGVtZW50c1dpdGhFbGVtZW50cy5tYXAoZnVuY3Rpb24oZG9tRWxlbWVudCkge1xuICAgICAgICAgIHJldHVybiBkb21FbGVtZW50Ll9fZWxlbWVudF9fO1xuICAgICAgICB9KTtcblxuICByZXR1cm4gZWxlbWVudHM7XG59XG5cbmZ1bmN0aW9uIGRlc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlKGRvbU5vZGUsIGRlc2NlbmRhbnRET01Ob2RlcyA9IFtdKSB7XG4gIGNvbnN0IHN0YXJ0ID0gLTEsXG4gICAgICAgIGRlbGV0ZUNvdW50ID0gMCxcbiAgICAgICAgY2hpbGRET01Ob2RlcyA9IGRvbU5vZGUuY2hpbGROb2RlczsgIC8vL1xuXG4gIHNwbGljZShkZXNjZW5kYW50RE9NTm9kZXMsIHN0YXJ0LCBkZWxldGVDb3VudCwgY2hpbGRET01Ob2Rlcyk7XG5cbiAgY2hpbGRET01Ob2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkRE9NTm9kZSkge1xuICAgIGRlc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlKGNoaWxkRE9NTm9kZSwgZGVzY2VuZGFudERPTU5vZGVzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRlc2NlbmRhbnRET01Ob2Rlcztcbn1cblxuZnVuY3Rpb24gZmlsdGVyRE9NTm9kZXNCeVNlbGVjdG9yKGRvbU5vZGVzLCBzZWxlY3Rvcikge1xuICBjb25zdCBmaWx0ZXJlZERPTU5vZGVzID0gZmlsdGVyRE9NTm9kZXMoZG9tTm9kZXMsIGZ1bmN0aW9uKGRvbU5vZGUpIHtcbiAgICByZXR1cm4gZG9tTm9kZU1hdGNoZXNTZWxlY3Rvcihkb21Ob2RlLCBzZWxlY3Rvcik7XG4gIH0pO1xuXG4gIHJldHVybiBmaWx0ZXJlZERPTU5vZGVzO1xufVxuXG5mdW5jdGlvbiBkb21Ob2RlTWF0Y2hlc1NlbGVjdG9yKGRvbU5vZGUsIHNlbGVjdG9yKSB7XG4gIGNvbnN0IGRvbU5vZGVUeXBlID0gZG9tTm9kZS5ub2RlVHlwZTtcblxuICBzd2l0Y2ggKGRvbU5vZGVUeXBlKSB7XG4gICAgY2FzZSBOb2RlLkVMRU1FTlRfTk9ERSA6IHtcbiAgICAgIGNvbnN0IGRvbUVsZW1lbnQgPSBkb21Ob2RlOyAvLy9cblxuICAgICAgcmV0dXJuIGRvbUVsZW1lbnQubWF0Y2hlcyhzZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgY2FzZSBOb2RlLlRFWFRfTk9ERSA6IHtcbiAgICAgIGlmIChzZWxlY3RvciA9PT0gXCIqXCIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBmaWx0ZXJET01Ob2Rlcyhkb21Ob2RlcywgdGVzdCkge1xuICBjb25zdCBmaWx0ZXJlZERPTU5vZGVzID0gW10sXG4gICAgICAgIGRvbU5vZGVzTGVuZ3RoID0gZG9tTm9kZXMubGVuZ3RoO1xuXG4gIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBkb21Ob2Rlc0xlbmd0aDsgaW5kZXgrKykge1xuICAgIGNvbnN0IGRvbU5vZGUgPSBkb21Ob2Rlc1tpbmRleF0sXG4gICAgICAgICAgcmVzdWx0ID0gdGVzdChkb21Ob2RlKTtcblxuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIGZpbHRlcmVkRE9NTm9kZXMucHVzaChkb21Ob2RlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmlsdGVyZWRET01Ob2Rlcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRvbUVsZW1lbnRGcm9tU2VsZWN0b3IsXG4gIGVsZW1lbnRzRnJvbURPTUVsZW1lbnRzLFxuICBkZXNjZW5kYW50RE9NTm9kZXNGcm9tRE9NTm9kZSxcbiAgZmlsdGVyRE9NTm9kZXNCeVNlbGVjdG9yLFxuICBkb21Ob2RlTWF0Y2hlc1NlbGVjdG9yLFxuICBmaWx0ZXJET01Ob2Rlc1xufTtcbiJdfQ==
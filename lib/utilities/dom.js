"use strict";

var arrayUtilities = require("../utilities/array");

var splice = arrayUtilities.splice;

function domElementFromSelector(selector) {
  var domElement = typeof selector === "string" ? document.querySelector(selector) : selector; ///

  return domElement;
}

function elementsFromDOMElements(domElements) {
  var domElementsWithElements = filterDOMNodes(domElements, function (domElement) {
    return domElement.__element__ !== undefined;
  }),
      elements = domElementsWithElements.map(function (domElement) {
    return domElement.__element__;
  });
  return elements;
}

function descendantDOMNodesFromDOMNode(domNode) {
  var descendantDOMNodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var start = -1,
      deleteCount = 0,
      childDOMNodes = domNode.childNodes; ///

  splice(descendantDOMNodes, start, deleteCount, childDOMNodes);
  childDOMNodes.forEach(function (childDOMNode) {
    descendantDOMNodesFromDOMNode(childDOMNode, descendantDOMNodes);
  });
  return descendantDOMNodes;
}

function filterDOMNodesBySelector(domNodes, selector) {
  var filteredDOMNodes = filterDOMNodes(domNodes, function (domNode) {
    return domNodeMatchesSelector(domNode, selector);
  });
  return filteredDOMNodes;
}

function domNodeMatchesSelector(domNode, selector) {
  var domNodeType = domNode.nodeType;

  switch (domNodeType) {
    case Node.ELEMENT_NODE:
      {
        var domElement = domNode; ///

        return domElement.matches(selector);
      }

    case Node.TEXT_NODE:
      {
        if (selector === "*") {
          return true;
        }
      }
  }

  return false;
}

function filterDOMNodes(domNodes, test) {
  var filteredDOMNodes = [],
      domNodesLength = domNodes.length;

  for (var index = 0; index < domNodesLength; index++) {
    var domNode = domNodes[index],
        result = test(domNode);

    if (result) {
      filteredDOMNodes.push(domNode);
    }
  }

  return filteredDOMNodes;
}

module.exports = {
  domElementFromSelector: domElementFromSelector,
  elementsFromDOMElements: elementsFromDOMElements,
  descendantDOMNodesFromDOMNode: descendantDOMNodesFromDOMNode,
  filterDOMNodesBySelector: filterDOMNodesBySelector,
  domNodeMatchesSelector: domNodeMatchesSelector,
  filterDOMNodes: filterDOMNodes
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbS5qcyJdLCJuYW1lcyI6WyJhcnJheVV0aWxpdGllcyIsInJlcXVpcmUiLCJzcGxpY2UiLCJkb21FbGVtZW50RnJvbVNlbGVjdG9yIiwic2VsZWN0b3IiLCJkb21FbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZWxlbWVudHNGcm9tRE9NRWxlbWVudHMiLCJkb21FbGVtZW50cyIsImRvbUVsZW1lbnRzV2l0aEVsZW1lbnRzIiwiZmlsdGVyRE9NTm9kZXMiLCJfX2VsZW1lbnRfXyIsInVuZGVmaW5lZCIsImVsZW1lbnRzIiwibWFwIiwiZGVzY2VuZGFudERPTU5vZGVzRnJvbURPTU5vZGUiLCJkb21Ob2RlIiwiZGVzY2VuZGFudERPTU5vZGVzIiwic3RhcnQiLCJkZWxldGVDb3VudCIsImNoaWxkRE9NTm9kZXMiLCJjaGlsZE5vZGVzIiwiZm9yRWFjaCIsImNoaWxkRE9NTm9kZSIsImZpbHRlckRPTU5vZGVzQnlTZWxlY3RvciIsImRvbU5vZGVzIiwiZmlsdGVyZWRET01Ob2RlcyIsImRvbU5vZGVNYXRjaGVzU2VsZWN0b3IiLCJkb21Ob2RlVHlwZSIsIm5vZGVUeXBlIiwiTm9kZSIsIkVMRU1FTlRfTk9ERSIsIm1hdGNoZXMiLCJURVhUX05PREUiLCJ0ZXN0IiwiZG9tTm9kZXNMZW5ndGgiLCJsZW5ndGgiLCJpbmRleCIsInJlc3VsdCIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxvQkFBRCxDQUE5Qjs7SUFFUUMsTSxHQUFXRixjLENBQVhFLE07O0FBRVIsU0FBU0Msc0JBQVQsQ0FBZ0NDLFFBQWhDLEVBQTBDO0FBQ3hDLE1BQU1DLFVBQVUsR0FBSSxPQUFPRCxRQUFQLEtBQW9CLFFBQXJCLEdBQ0VFLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QkgsUUFBdkIsQ0FERixHQUVJQSxRQUZ2QixDQUR3QyxDQUdOOztBQUVsQyxTQUFPQyxVQUFQO0FB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c0JBQXNCLEVBQXRCQSxzQkFMZTtBQU1makIsRUFBQUEsY0FBYyxFQUFkQTtBQU5lLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGFycmF5VXRpbGl0aWVzID0gcmVxdWlyZShcIi4uL3V0aWxpdGllcy9hcnJheVwiKTtcblxuY29uc3QgeyBzcGxpY2UgfSA9IGFycmF5VXRpbGl0aWVzO1xuXG5mdW5jdGlvbiBkb21FbGVtZW50RnJvbVNlbGVjdG9yKHNlbGVjdG9yKSB7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSAodHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiKSA/XG4gICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjsgIC8vL1xuXG4gIHJldHVybiBkb21FbGVtZW50O1xufVxuXG5mdW5jdGlvbiBlbGVtZW50c0Zyb21ET01FbGVtZW50cyhkb21FbGVtZW50cykge1xuICBjb25zdCBkb21FbGVtZW50c1dpdGhFbGVtZW50cyA9IGZpbHRlckRPTU5vZGVzKGRvbUVsZW1lbnRzLCBmdW5jdGlvbihkb21FbGVtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIChkb21FbGVtZW50Ll9fZWxlbWVudF9fICE9PSB1bmRlZmluZWQpO1xuICAgICAgICB9KSxcbiAgICAgICAgZWxlbWVudHMgPSBkb21FbGVtZW50c1dpdGhFbGVtZW50cy5tYXAoZnVuY3Rpb24oZG9tRWxlbWVudCkge1xuICAgICAgICAgIHJldHVybiBkb21FbGVtZW50Ll9fZWxlbWVudF9fO1xuICAgICAgICB9KTtcblxuICByZXR1cm4gZWxlbWVudHM7XG59XG5cbmZ1bmN0aW9uIGRlc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlKGRvbU5vZGUsIGRlc2NlbmRhbnRET01Ob2RlcyA9IFtdKSB7XG4gIGNvbnN0IHN0YXJ0ID0gLTEsXG4gICAgICAgIGRlbGV0ZUNvdW50ID0gMCxcbiAgICAgICAgY2hpbGRET01Ob2RlcyA9IGRvbU5vZGUuY2hpbGROb2RlczsgIC8vL1xuXG4gIHNwbGljZShkZXNjZW5kYW50RE9NTm9kZXMsIHN0YXJ0LCBkZWxldGVDb3VudCwgY2hpbGRET01Ob2Rlcyk7XG5cbiAgY2hpbGRET01Ob2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkRE9NTm9kZSkge1xuICAgIGRlc2NlbmRhbnRET01Ob2Rlc0Zyb21ET01Ob2RlKGNoaWxkRE9NTm9kZSwgZGVzY2VuZGFudERPTU5vZGVzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRlc2NlbmRhbnRET01Ob2Rlcztcbn1cblxuZnVuY3Rpb24gZmlsdGVyRE9NTm9kZXNCeVNlbGVjdG9yKGRvbU5vZGVzLCBzZWxlY3Rvcikge1xuICBjb25zdCBmaWx0ZXJlZERPTU5vZGVzID0gZmlsdGVyRE9NTm9kZXMoZG9tTm9kZXMsIGZ1bmN0aW9uKGRvbU5vZGUpIHtcbiAgICByZXR1cm4gZG9tTm9kZU1hdGNoZXNTZWxlY3Rvcihkb21Ob2RlLCBzZWxlY3Rvcik7XG4gIH0pO1xuXG4gIHJldHVybiBmaWx0ZXJlZERPTU5vZGVzO1xufVxuXG5mdW5jdGlvbiBkb21Ob2RlTWF0Y2hlc1NlbGVjdG9yKGRvbU5vZGUsIHNlbGVjdG9yKSB7XG4gIGNvbnN0IGRvbU5vZGVUeXBlID0gZG9tTm9kZS5ub2RlVHlwZTtcblxuICBzd2l0Y2ggKGRvbU5vZGVUeXBlKSB7XG4gICAgY2FzZSBOb2RlLkVMRU1FTlRfTk9ERSA6IHtcbiAgICAgIGNvbnN0IGRvbUVsZW1lbnQgPSBkb21Ob2RlOyAvLy9cblxuICAgICAgcmV0dXJuIGRvbUVsZW1lbnQubWF0Y2hlcyhzZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgY2FzZSBOb2RlLlRFWFRfTk9ERSA6IHtcbiAgICAgIGlmIChzZWxlY3RvciA9PT0gXCIqXCIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBmaWx0ZXJET01Ob2Rlcyhkb21Ob2RlcywgdGVzdCkge1xuICBjb25zdCBmaWx0ZXJlZERPTU5vZGVzID0gW10sXG4gICAgICAgIGRvbU5vZGVzTGVuZ3RoID0gZG9tTm9kZXMubGVuZ3RoO1xuXG4gIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBkb21Ob2Rlc0xlbmd0aDsgaW5kZXgrKykge1xuICAgIGNvbnN0IGRvbU5vZGUgPSBkb21Ob2Rlc1tpbmRleF0sXG4gICAgICAgICAgcmVzdWx0ID0gdGVzdChkb21Ob2RlKTtcblxuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIGZpbHRlcmVkRE9NTm9kZXMucHVzaChkb21Ob2RlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmlsdGVyZWRET01Ob2Rlcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRvbUVsZW1lbnRGcm9tU2VsZWN0b3IsXG4gIGVsZW1lbnRzRnJvbURPTUVsZW1lbnRzLFxuICBkZXNjZW5kYW50RE9NTm9kZXNGcm9tRE9NTm9kZSxcbiAgZmlsdGVyRE9NTm9kZXNCeVNlbGVjdG9yLFxuICBkb21Ob2RlTWF0Y2hlc1NlbGVjdG9yLFxuICBmaWx0ZXJET01Ob2Rlc1xufTtcbiJdfQ==
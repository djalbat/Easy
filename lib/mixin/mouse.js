'use strict';

function onMouseUp(handler) {
  if (handler.intermediateHandler === undefined) {
    handler.intermediateHandler = function (handler, event) {
      var mouseTop = event.pageY,
          ///
      mouseLeft = event.pageX,
          ///
      mouseButton = event.button,
          ///
      preventDefault = handler(mouseTop, mouseLeft, mouseButton);

      return preventDefault;
    };
  }

  this.on('mouseup', handler);
}

function onMouseDown(handler) {
  if (handler.intermediateHandler === undefined) {
    handler.intermediateHandler = function (handler, event) {
      var mouseTop = event.pageY,
          ///
      mouseLeft = event.pageX,
          ///
      mouseButton = event.button,
          ///
      preventDefault = handler(mouseTop, mouseLeft, mouseButton);

      return preventDefault;
    };
  }

  this.on('mousedown', handler);
}

function onMouseOver(handler) {
  if (handler.intermediateHandler === undefined) {
    handler.intermediateHandler = function (handler, event) {
      var mouseTop = event.pageY,
          ///
      mouseLeft = event.pageX,
          ///
      preventDefault = handler(mouseTop, mouseLeft);

      return preventDefault;
    };
  }

  this.on('mouseover', handler);
}

function onMouseOut(handler) {
  if (handler.intermediateHandler === undefined) {
    handler.intermediateHandler = function (handler, event) {
      var mouseTop = event.pageY,
          ///
      mouseLeft = event.pageX,
          ///
      preventDefault = handler(mouseTop, mouseLeft);

      return preventDefault;
    };
  }

  this.on('mouseout', handler);
}

function onMouseMove(handler) {
  if (handler.intermediateHandler === undefined) {
    handler.intermediateHandler = function (handler, event) {
      var mouseTop = event.pageY,
          ///
      mouseLeft = event.pageX,
          ///
      preventDefault = handler(mouseTop, mouseLeft);

      return preventDefault;
    };
  }

  this.on('mousemove', handler);
}

function offMouseUp(handler) {
  this.off('mouseup', handler);
}

function offMouseDown(handler) {
  this.off('mousedown', handler);
}

function offMouseOver(handler) {
  this.off('mouseover', handler);
}

function offMouseOut(handler) {
  this.off('mouseout', handler);
}

function offMouseMove(handler) {
  this.off('mousemove', handler);
}

var mouse = {
  onMouseUp: onMouseUp,
  onMouseDown: onMouseDown,
  onMouseOver: onMouseOver,
  onMouseOut: onMouseOut,
  onMouseMove: onMouseMove,
  offMouseUp: offMouseUp,
  offMouseDown: offMouseDown,
  offMouseOver: offMouseOver,
  offMouseOut: offMouseOut,
  offMouseMove: offMouseMove
};

module.exports = mouse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi9tb3VzZS5qcyJdLCJuYW1lcyI6WyJvbk1vdXNlVXAiLCJoYW5kbGVyIiwiaW50ZXJtZWRpYXRlSGFuZGxlciIsInVuZGVmaW5lZCIsImV2ZW50IiwibW91c2VUb3AiLCJwYWdlWSIsIm1vdXNlTGVmdCIsInBhZ2VYIiwibW91c2VCdXR0b24iLCJidXR0b24iLCJwcmV2ZW50RGVmYXVsdCIsIm9uIiwib25Nb3VzZURvd24iLCJvbk1vdXNlT3ZlciIsIm9uTW91c2VPdXQiLCJvbk1vdXNlTW92ZSIsIm9mZk1vdXNlVXAiLCJvZmYiLCJvZmZNb3VzZURvd24iLCJvZmZNb3VzZU92ZXIiLCJvZmZNb3VzZU91dCIsIm9mZk1vdXNlTW92ZSIsIm1vdXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsU0FBVCxDQUFtQkMsT0FBbkIsRUFBNEI7QUFDMUIsTUFBSUEsUUFBUUMsbUJBQVIsS0FBZ0NDLFNBQXBDLEVBQStDO0FBQzdDRixZQUFRQyxtQkFBUixHQUE4QixVQUFTRCxPQUFULEVBQWtCRyxLQUFsQixFQUF5QjtBQUNyRCxVQUFNQyxXQUFXRCxNQUFNRSxLQUF2QjtBQUFBLFVBQStCO0FBQ3pCQyxrQkFBWUgsTUFBTUksS0FEeEI7QUFBQSxVQUMrQjtBQUN6QkMsb0JBQWNMLE1BQU1NLE1BRjFCO0FBQUEsVUFFa0M7QUFDNUJDLHVCQUFpQlYsUUFBUUksUUFBUixFQUFrQkUsU0FBbEIsRUFBNkJFLFdBQTdCLENBSHZCOztBQUtBLGFBQU9FLGNBQVA7QUFDRCxLQVBEO0FBUUQ7O0FBRUQsT0FBS0MsRUFBTCxDQUFRLFNBQVIsRUFBbUJYLE9BQW5CO0FBQ0Q7O0FBRUQsU0FBU1ksV0FBVCxDQUFxQlosT0FBckIsRUFBOEI7QUFDNUIsTUFBSUEsUUFBUUMsbUJBQVIsS0FBZ0NDLFNBQXBDLEVBQStDO0FBQzdDRixZQUFRQyxtQkFBUixHQUE4QixVQUFTRCxPQUFULEVBQWtCRyxLQUFsQixF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WUEsVUFOQTtBQU9aRSxnQkFBY0EsWUFQRjtBQVFaQyxnQkFBY0EsWUFSRjtBQVNaQyxlQUFhQSxXQVREO0FBVVpDLGdCQUFjQTtBQVZGLENBQWQ7O0FBYUFFLE9BQU9DLE9BQVAsR0FBaUJGLEtBQWpCIiwiZmlsZSI6Im1vdXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBvbk1vdXNlVXAoaGFuZGxlcikge1xuICBpZiAoaGFuZGxlci5pbnRlcm1lZGlhdGVIYW5kbGVyID09PSB1bmRlZmluZWQpIHtcbiAgICBoYW5kbGVyLmludGVybWVkaWF0ZUhhbmRsZXIgPSBmdW5jdGlvbihoYW5kbGVyLCBldmVudCkge1xuICAgICAgY29uc3QgbW91c2VUb3AgPSBldmVudC5wYWdlWSwgIC8vL1xuICAgICAgICAgICAgbW91c2VMZWZ0ID0gZXZlbnQucGFnZVgsIC8vL1xuICAgICAgICAgICAgbW91c2VCdXR0b24gPSBldmVudC5idXR0b24sIC8vL1xuICAgICAgICAgICAgcHJldmVudERlZmF1bHQgPSBoYW5kbGVyKG1vdXNlVG9wLCBtb3VzZUxlZnQsIG1vdXNlQnV0dG9uKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHByZXZlbnREZWZhdWx0O1xuICAgIH1cbiAgfVxuICBcbiAgdGhpcy5vbignbW91c2V1cCcsIGhhbmRsZXIpOyBcbn1cblxuZnVuY3Rpb24gb25Nb3VzZURvd24oaGFuZGxlcikge1xuICBpZiAoaGFuZGxlci5pbnRlcm1lZGlhdGVIYW5kbGVyID09PSB1bmRlZmluZWQpIHtcbiAgICBoYW5kbGVyLmludGVybWVkaWF0ZUhhbmRsZXIgPSBmdW5jdGlvbihoYW5kbGVyLCBldmVudCkge1xuICAgICAgY29uc3QgbW91c2VUb3AgPSBldmVudC5wYWdlWSwgIC8vL1xuICAgICAgICAgICAgbW91c2VMZWZ0ID0gZXZlbnQucGFnZVgsIC8vL1xuICAgICAgICAgICAgbW91c2VCdXR0b24gPSBldmVudC5idXR0b24sIC8vL1xuICAgICAgICAgICAgcHJldmVudERlZmF1bHQgPSBoYW5kbGVyKG1vdXNlVG9wLCBtb3VzZUxlZnQsIG1vdXNlQnV0dG9uKTtcblxuICAgICAgcmV0dXJuIHByZXZlbnREZWZhdWx0O1xuICAgIH1cbiAgfVxuXG4gIHRoaXMub24oJ21vdXNlZG93bicsIGhhbmRsZXIpOyBcbn1cblxuZnVuY3Rpb24gb25Nb3VzZU92ZXIoaGFuZGxlcikge1xuICBpZiAoaGFuZGxlci5pbnRlcm1lZGlhdGVIYW5kbGVyID09PSB1bmRlZmluZWQpIHtcbiAgICBoYW5kbGVyLmludGVybWVkaWF0ZUhhbmRsZXIgPSBmdW5jdGlvbihoYW5kbGVyLCBldmVudCkge1xuICAgICAgY29uc3QgbW91c2VUb3AgPSBldmVudC5wYWdlWSwgIC8vL1xuICAgICAgICAgICAgbW91c2VMZWZ0ID0gZXZlbnQucGFnZVgsIC8vL1xuICAgICAgICAgICAgcHJldmVudERlZmF1bHQgPSBoYW5kbGVyKG1vdXNlVG9wLCBtb3VzZUxlZnQpO1xuXG4gICAgICByZXR1cm4gcHJldmVudERlZmF1bHQ7XG4gICAgfVxuICB9XG5cbiAgdGhpcy5vbignbW91c2VvdmVyJywgaGFuZGxlcik7IFxufVxuXG5mdW5jdGlvbiBvbk1vdXNlT3V0KGhhbmRsZXIpIHtcbiAgaWYgKGhhbmRsZXIuaW50ZXJtZWRpYXRlSGFuZGxlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgaGFuZGxlci5pbnRlcm1lZGlhdGVIYW5kbGVyID0gZnVuY3Rpb24oaGFuZGxlciwgZXZlbnQpIHtcbiAgICAgIGNvbnN0IG1vdXNlVG9wID0gZXZlbnQucGFnZVksICAvLy9cbiAgICAgICAgICAgIG1vdXNlTGVmdCA9IGV2ZW50LnBhZ2VYLCAvLy9cbiAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gaGFuZGxlcihtb3VzZVRvcCwgbW91c2VMZWZ0KTtcblxuICAgICAgcmV0dXJuIHByZXZlbnREZWZhdWx0O1xuICAgIH1cbiAgfVxuXG4gIHRoaXMub24oJ21vdXNlb3V0JywgaGFuZGxlcik7IFxufVxuXG5mdW5jdGlvbiBvbk1vdXNlTW92ZShoYW5kbGVyKSB7XG4gIGlmIChoYW5kbGVyLmludGVybWVkaWF0ZUhhbmRsZXIgPT09IHVuZGVmaW5lZCkge1xuICAgIGhhbmRsZXIuaW50ZXJtZWRpYXRlSGFuZGxlciA9IGZ1bmN0aW9uKGhhbmRsZXIsIGV2ZW50KSB7XG4gICAgICBjb25zdCBtb3VzZVRvcCA9IGV2ZW50LnBhZ2VZLCAgLy8vXG4gICAgICAgICAgICBtb3VzZUxlZnQgPSBldmVudC5wYWdlWCwgLy8vXG4gICAgICAgICAgICBwcmV2ZW50RGVmYXVsdCA9IGhhbmRsZXIobW91c2VUb3AsIG1vdXNlTGVmdCk7XG5cbiAgICAgIHJldHVybiBwcmV2ZW50RGVmYXVsdDtcbiAgICB9XG4gIH1cblxuICB0aGlzLm9uKCdtb3VzZW1vdmUnLCBoYW5kbGVyKTsgXG59XG5cbmZ1bmN0aW9uIG9mZk1vdXNlVXAoaGFuZGxlcikgeyB0aGlzLm9mZignbW91c2V1cCcsIGhhbmRsZXIpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlRG93bihoYW5kbGVyKSB7IHRoaXMub2ZmKCdtb3VzZWRvd24nLCBoYW5kbGVyKTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU92ZXIoaGFuZGxlcikgeyB0aGlzLm9mZignbW91c2VvdmVyJywgaGFuZGxlcik7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VPdXQoaGFuZGxlcikgeyB0aGlzLm9mZignbW91c2VvdXQnLCBoYW5kbGVyKTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU1vdmUoaGFuZGxlcikgeyB0aGlzLm9mZignbW91c2Vtb3ZlJywgaGFuZGxlcik7IH1cblxuY29uc3QgbW91c2UgPSB7XG4gIG9uTW91c2VVcDogb25Nb3VzZVVwLFxuICBvbk1vdXNlRG93bjogb25Nb3VzZURvd24sXG4gIG9uTW91c2VPdmVyOiBvbk1vdXNlT3ZlcixcbiAgb25Nb3VzZU91dDogb25Nb3VzZU91dCxcbiAgb25Nb3VzZU1vdmU6IG9uTW91c2VNb3ZlLFxuICBvZmZNb3VzZVVwOiBvZmZNb3VzZVVwLFxuICBvZmZNb3VzZURvd246IG9mZk1vdXNlRG93bixcbiAgb2ZmTW91c2VPdmVyOiBvZmZNb3VzZU92ZXIsXG4gIG9mZk1vdXNlT3V0OiBvZmZNb3VzZU91dCxcbiAgb2ZmTW91c2VNb3ZlOiBvZmZNb3VzZU1vdmVcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbW91c2U7XG4iXX0=
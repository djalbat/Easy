'use strict';

function onMouseUp(handler) {
  var intermediateHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultIntermediateHandler;

  this.on('mouseup', handler, intermediateHandler);
}

function onMouseDown(handler) {
  var intermediateHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultIntermediateHandler;

  this.on('mousedown', handler, intermediateHandler);
}

function onMouseOver(handler) {
  var intermediateHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultIntermediateHandler;

  this.on('mouseover', handler, intermediateHandler);
}

function onMouseOut(handler) {
  var intermediateHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultIntermediateHandler;

  this.on('mouseout', handler, intermediateHandler);
}

function onMouseMove(handler) {
  var intermediateHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultIntermediateHandler;

  this.on('mousemove', handler, intermediateHandler);
}

function offMouseUp(handler) {
  this.off('mouseup', handler);
}

function offMouseDown(handler) {
  this.off('mousedown', handler);
}

function offMouseOver(handler) {
  this.off('mouseover', handler);
}

function offMouseOut(handler) {
  this.off('mouseout', handler);
}

function offMouseMove(handler) {
  this.off('mousemove', handler);
}

var mouseMixin = {
  onMouseUp: onMouseUp,
  onMouseDown: onMouseDown,
  onMouseOver: onMouseOver,
  onMouseOut: onMouseOut,
  onMouseMove: onMouseMove,
  offMouseUp: offMouseUp,
  offMouseDown: offMouseDown,
  offMouseOver: offMouseOver,
  offMouseOut: offMouseOut,
  offMouseMove: offMouseMove
};

module.exports = mouseMixin;

function defaultIntermediateHandler(handler, event, targetElement) {
  var mouseTop = event.pageY,
      ///
  mouseLeft = event.pageX,
      ///
  mouseButton = event.button; ///

  handler(mouseTop, mouseLeft, mouseButton, event, targetElement);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi9tb3VzZS5qcyJdLCJuYW1lcyI6WyJvbk1vdXNlVXAiLCJoYW5kbGVyIiwiaW50ZXJtZWRpYXRlSGFuZGxlciIsImRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyIiwib24iLCJvbk1vdXNlRG93biIsIm9uTW91c2VPdmVyIiwib25Nb3VzZU91dCIsIm9uTW91c2VNb3ZlIiwib2ZmTW91c2VVcCIsIm9mZiIsIm9mZk1vdXNlRG93biIsIm9mZk1vdXNlT3ZlciIsIm9mZk1vdXNlT3V0Iiwib2ZmTW91c2VNb3ZlIiwibW91c2VNaXhpbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJldmVudCIsInRhcmdldEVsZW1lbnQiLCJtb3VzZVRvcCIsInBhZ2VZIiwibW91c2VMZWZ0IiwicGFnZVgiLCJtb3VzZUJ1dHRvbiIsImJ1dHRvbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsU0FBVCxDQUFtQkMsT0FBbkIsRUFBOEU7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCOztBQUM1RSxPQUFLQyxFQUFMLENBQVEsU0FBUixFQUFtQkgsT0FBbkIsRUFBNEJDLG1CQUE1QjtBQUNEOztBQUVELFNBQVNHLFdBQVQsQ0FBcUJKLE9BQXJCLEVBQWdGO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0Qjs7QUFDOUUsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJILE9BQXJCLEVBQThCQyxtQkFBOUI7QUFDRDs7QUFFRCxTQUFTSSxXQUFULENBQXFCTCxPQUFyQixFQUFnRjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7O0FBQzlFLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSCxPQUFyQixFQUE4QkMsbUJBQTlCO0FBQ0Q7O0FBRUQsU0FBU0ssVUFBVCxDQUFvQk4sT0FBcEIsRUFBK0U7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCOztBQUM3RSxPQUFLQyxFQUFMLENBQVEsVUFBUixFQUFvQkgsT0FBcEIsRUFBNkJDLG1CQUE3QjtBQUNEOztBQUVELFNBQVNNLFdBQVQsQ0FBcUJQLE9BQXJCLEVBQWdGO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0Qjs7QUFDOUUsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJILE9BQXJCLEVBQThCQyxtQkFBOUI7QUFDRDs7QUFFRCxTQUFTTyxVQUFULENBQW9CUixPQUFwQixFQUE2QjtBQUFFLE9BQUtTLEdBQUwsQ0FBUyxTQUFULEVBQW9CVCxPQUFwQjtBQUErQjs7QUFFOUQsU0FBU1UsWUFBVCxDQUFzQlYsT0FBdEIsRUFBK0I7QUFBRSxPQUFLUyxHQUFMLENBQVMsV0FBVCxFQUFzQlQsT0FBdEI7QUFBaUM7O0FBRWxFLFNBQVNXLFlBQVQsQ0FBc0JYLE9BQXRCLEVBQStCO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFdBQVQsRUFBc0JULE9BQXRCO0FBQWlDOztBQUVsRSxTQUFTWSxXQUFULENBQXFCWixPQUFyQixFQUE4QjtBQUFFLE9BQUtTLEdBQUwsQ0FBUyxVQUFULEVBQXFCVCxPQUFyQjtBQUFnQzs7QUFFaEUsU0FBU2EsWUFBVCxDQUFzQmIsT0FBdEIsRUFBK0I7QUFBRSxPQUFLUyxHQUFMLENBQVMsV0FBVCxFQUFzQlQsT0FBdEI7QUFBaUM7O0FBRWxFLElBQU1jLGFBQWE7QUFDakJmLGFBQVdBLFNBRE07QUFFakJLLGVBQWFBLFdBRkk7QUFHakJDLGVBQWFBLFdBSEk7QUFJakJDLGNBQVlBLFVBSks7QUFLakJDLGVBQWFBLFdBTEk7QUFNakJDLGNBQVlBLFVBTks7QUFPakJFLGdCQUFjQSxZQVBHO0FBUWpCQyxnQkFBY0EsWUFSRztBQVNqQkMsZUFBYUEsV0FUSTtBQVVqQkMsZ0JBQWNBO0FBVkcsQ0FBbkI7O0FBYUFFLE9BQU9DLE9BQVAsR0FBaUJGLFVBQWpCOztBQUVBLFNBQVNaLDBCQUFULENBQW9DRixPQUFwQyxFQUE2Q2lCLEtBQTdDLEVBQW9EQyxhQUFwRCxFQUFtRTtBQUNqRSxNQUFNQyxXQUFXRixNQUFNRyxLQUF2QjtBQUFBLE1BQStCO0FBQ3pCQyxjQUFZSixNQUFNSyxLQUR4QjtBQUFBLE1BQytCO0FBQ3pCQyxnQkFBY04sTUFBTU8sTUFGMUIsQ0FEaUUsQ0FHL0I7O0FBRWxDeEIsVUFBUW1CLFFBQVIsRUFBa0JFLFNBQWxCLEVBQTZCRSxXQUE3QixFQUEwQ04sS0FBMUMsRUFBaURDLGFBQWpEO0FBQ0QiLCJmaWxlIjoibW91c2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9uTW91c2VVcChoYW5kbGVyLCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2V1cCcsIGhhbmRsZXIsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvbk1vdXNlRG93bihoYW5kbGVyLCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2Vkb3duJywgaGFuZGxlciwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9uTW91c2VPdmVyKGhhbmRsZXIsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKCdtb3VzZW92ZXInLCBoYW5kbGVyLCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZU91dChoYW5kbGVyLCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2VvdXQnLCBoYW5kbGVyLCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZU1vdmUoaGFuZGxlciwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oJ21vdXNlbW92ZScsIGhhbmRsZXIsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvZmZNb3VzZVVwKGhhbmRsZXIpIHsgdGhpcy5vZmYoJ21vdXNldXAnLCBoYW5kbGVyKTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZURvd24oaGFuZGxlcikgeyB0aGlzLm9mZignbW91c2Vkb3duJywgaGFuZGxlcik7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VPdmVyKGhhbmRsZXIpIHsgdGhpcy5vZmYoJ21vdXNlb3ZlcicsIGhhbmRsZXIpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlT3V0KGhhbmRsZXIpIHsgdGhpcy5vZmYoJ21vdXNlb3V0JywgaGFuZGxlcik7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VNb3ZlKGhhbmRsZXIpIHsgdGhpcy5vZmYoJ21vdXNlbW92ZScsIGhhbmRsZXIpOyB9XG5cbmNvbnN0IG1vdXNlTWl4aW4gPSB7XG4gIG9uTW91c2VVcDogb25Nb3VzZVVwLFxuICBvbk1vdXNlRG93bjogb25Nb3VzZURvd24sXG4gIG9uTW91c2VPdmVyOiBvbk1vdXNlT3ZlcixcbiAgb25Nb3VzZU91dDogb25Nb3VzZU91dCxcbiAgb25Nb3VzZU1vdmU6IG9uTW91c2VNb3ZlLFxuICBvZmZNb3VzZVVwOiBvZmZNb3VzZVVwLFxuICBvZmZNb3VzZURvd246IG9mZk1vdXNlRG93bixcbiAgb2ZmTW91c2VPdmVyOiBvZmZNb3VzZU92ZXIsXG4gIG9mZk1vdXNlT3V0OiBvZmZNb3VzZU91dCxcbiAgb2ZmTW91c2VNb3ZlOiBvZmZNb3VzZU1vdmVcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbW91c2VNaXhpbjtcblxuZnVuY3Rpb24gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIoaGFuZGxlciwgZXZlbnQsIHRhcmdldEVsZW1lbnQpIHtcbiAgY29uc3QgbW91c2VUb3AgPSBldmVudC5wYWdlWSwgIC8vL1xuICAgICAgICBtb3VzZUxlZnQgPSBldmVudC5wYWdlWCwgLy8vXG4gICAgICAgIG1vdXNlQnV0dG9uID0gZXZlbnQuYnV0dG9uOyAvLy9cbiAgXG4gIGhhbmRsZXIobW91c2VUb3AsIG1vdXNlTGVmdCwgbW91c2VCdXR0b24sIGV2ZW50LCB0YXJnZXRFbGVtZW50KTtcbn1cbiJdfQ==
'use strict';

function onMouseUp(handler, object) {
  var intermediateHandler = arguments.length <= 2 || arguments[2] === undefined ? defaultIntermediateHandler : arguments[2];

  this.on('mouseup', handler, object, intermediateHandler);
}

function onMouseDown(handler, object) {
  var intermediateHandler = arguments.length <= 2 || arguments[2] === undefined ? defaultIntermediateHandler : arguments[2];

  this.on('mousedown', handler, object, intermediateHandler);
}

function onMouseOver(handler, object) {
  var intermediateHandler = arguments.length <= 2 || arguments[2] === undefined ? defaultIntermediateHandler : arguments[2];

  this.on('mouseover', handler, object, intermediateHandler);
}

function onMouseOut(handler, object) {
  var intermediateHandler = arguments.length <= 2 || arguments[2] === undefined ? defaultIntermediateHandler : arguments[2];

  this.on('mouseout', handler, object, intermediateHandler);
}

function onMouseMove(handler, object) {
  var intermediateHandler = arguments.length <= 2 || arguments[2] === undefined ? defaultIntermediateHandler : arguments[2];

  this.on('mousemove', handler, object, intermediateHandler);
}

function offMouseUp(handler, object) {
  this.off('mouseup', handler, object);
}

function offMouseDown(handler, object) {
  this.off('mousedown', handler, object);
}

function offMouseOver(handler, object) {
  this.off('mouseover', handler, object);
}

function offMouseOut(handler, object) {
  this.off('mouseout', handler, object);
}

function offMouseMove(handler, object) {
  this.off('mousemove', handler, object);
}

var mouseMixin = {
  onMouseUp: onMouseUp,
  onMouseDown: onMouseDown,
  onMouseOver: onMouseOver,
  onMouseOut: onMouseOut,
  onMouseMove: onMouseMove,
  offMouseUp: offMouseUp,
  offMouseDown: offMouseDown,
  offMouseOver: offMouseOver,
  offMouseOut: offMouseOut,
  offMouseMove: offMouseMove
};

module.exports = mouseMixin;

function defaultIntermediateHandler(handler, event, targetElement) {
  var mouseTop = event.pageY,
      ///
  mouseLeft = event.pageX,
      ///
  mouseButton = event.button; ///

  handler(mouseTop, mouseLeft, mouseButton, event, targetElement);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi9tb3VzZS5qcyJdLCJuYW1lcyI6WyJvbk1vdXNlVXAiLCJoYW5kbGVyIiwib2JqZWN0IiwiaW50ZXJtZWRpYXRlSGFuZGxlciIsImRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyIiwib24iLCJvbk1vdXNlRG93biIsIm9uTW91c2VPdmVyIiwib25Nb3VzZU91dCIsIm9uTW91c2VNb3ZlIiwib2ZmTW91c2VVcCIsIm9mZiIsIm9mZk1vdXNlRG93biIsIm9mZk1vdXNlT3ZlciIsIm9mZk1vdXNlT3V0Iiwib2ZmTW91c2VNb3ZlIiwibW91c2VNaXhpbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJldmVudCIsInRhcmdldEVsZW1lbnQiLCJtb3VzZVRvcCIsInBhZ2VZIiwibW91c2VMZWZ0IiwicGFnZVgiLCJtb3VzZUJ1dHRvbiIsImJ1dHRvbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsU0FBVCxDQUFtQkMsT0FBbkIsRUFBNEJDLE1BQTVCLEVBQXNGO0FBQUEsTUFBbERDLG1CQUFrRCx5REFBNUJDLDBCQUE0Qjs7QUFDcEYsT0FBS0MsRUFBTCxDQUFRLFNBQVIsRUFBbUJKLE9BQW5CLEVBQTRCQyxNQUE1QixFQUFvQ0MsbUJBQXBDO0FBQ0Q7O0FBRUQsU0FBU0csV0FBVCxDQUFxQkwsT0FBckIsRUFBOEJDLE1BQTlCLEVBQXdGO0FBQUEsTUFBbERDLG1CQUFrRCx5REFBNUJDLDBCQUE0Qjs7QUFDdEYsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJKLE9BQXJCLEVBQThCQyxNQUE5QixFQUFzQ0MsbUJBQXRDO0FBQ0Q7O0FBRUQsU0FBU0ksV0FBVCxDQUFxQk4sT0FBckIsRUFBOEJDLE1BQTlCLEVBQXdGO0FBQUEsTUFBbERDLG1CQUFrRCx5REFBNUJDLDBCQUE0Qjs7QUFDdEYsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJKLE9BQXJCLEVBQThCQyxNQUE5QixFQUFzQ0MsbUJBQXRDO0FBQ0Q7O0FBRUQsU0FBU0ssVUFBVCxDQUFvQlAsT0FBcEIsRUFBNkJDLE1BQTdCLEVBQXVGO0FBQUEsTUFBbERDLG1CQUFrRCx5REFBNUJDLDBCQUE0Qjs7QUFDckYsT0FBS0MsRUFBTCxDQUFRLFVBQVIsRUFBb0JKLE9BQXBCLEVBQTZCQyxNQUE3QixFQUFxQ0MsbUJBQXJDO0FBQ0Q7O0FBRUQsU0FBU00sV0FBVCxDQUFxQlIsT0FBckIsRUFBOEJDLE1BQTlCLEVBQXdGO0FBQUEsTUFBbERDLG1CQUFrRCx5REFBNUJDLDBCQUE0Qjs7QUFDdEYsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJKLE9BQXJCLEVBQThCQyxNQUE5QixFQUFzQ0MsbUJBQXRDO0FBQ0Q7O0FBRUQsU0FBU08sVUFBVCxDQUFvQlQsT0FBcEIsRUFBNkJDLE1BQTdCLEVBQXFDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFNBQVQsRUFBb0JWLE9BQXBCLEVBQTZCQyxNQUE3QjtBQUF1Qzs7QUFFOUUsU0FBU1UsWUFBVCxDQUFzQlgsT0FBdEIsRUFBK0JDLE1BQS9CLEVBQXVDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFdBQVQsRUFBc0JWLE9BQXRCLEVBQStCQyxNQUEvQjtBQUF5Qzs7QUFFbEYsU0FBU1csWUFBVCxDQUFzQlosT0FBdEIsRUFBK0JDLE1BQS9CLEVBQXVDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFdBQVQsRUFBc0JWLE9BQXRCLEVBQStCQyxNQUEvQjtBQUF5Qzs7QUFFbEYsU0FBU1ksV0FBVCxDQUFxQmIsT0FBckIsRUFBOEJDLE1BQTlCLEVBQXNDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFVBQVQsRUFBcUJWLE9BQXJCLEVBQThCQyxNQUE5QjtBQUF3Qzs7QUFFaEYsU0FBU2EsWUFBVCxDQUFzQmQsT0FBdEIsRUFBK0JDLE1BQS9CLEVBQXVDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFdBQVQsRUFBc0JWLE9BQXRCLEVBQStCQyxNQUEvQjtBQUF5Qzs7QUFFbEYsSUFBTWMsYUFBYTtBQUNqQmhCLGFBQVdBLFNBRE07QUFFakJNLGVBQWFBLFdBRkk7QUFHakJDLGVBQWFBLFdBSEk7QUFJakJDLGNBQVlBLFVBSks7QUFLakJDLGVBQWFBLFdBTEk7QUFNakJDLGNBQVlBLFVBTks7QUFPakJFLGdCQUFjQSxZQVBHO0FBUWpCQyxnQkFBY0EsWUFSRztBQVNqQkMsZUFBYUEsV0FUSTtBQVVqQkMsZ0JBQWNBO0FBVkcsQ0FBbkI7O0FBYUFFLE9BQU9DLE9BQVAsR0FBaUJGLFVBQWpCOztBQUVBLFNBQVNaLDBCQUFULENBQW9DSCxPQUFwQyxFQUE2Q2tCLEtBQTdDLEVBQW9EQyxhQUFwRCxFQUFtRTtBQUNqRSxNQUFNQyxXQUFXRixNQUFNRyxLQUF2QjtBQUFBLE1BQStCO0FBQ3pCQyxjQUFZSixNQUFNSyxLQUR4QjtBQUFBLE1BQytCO0FBQ3pCQyxnQkFBY04sTUFBTU8sTUFGMUIsQ0FEaUUsQ0FHL0I7O0FBRWxDekIsVUFBUW9CLFFBQVIsRUFBa0JFLFNBQWxCLEVBQTZCRSxXQUE3QixFQUEwQ04sS0FBMUMsRUFBaURDLGFBQWpEO0FBQ0QiLCJmaWxlIjoibW91c2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9uTW91c2VVcChoYW5kbGVyLCBvYmplY3QsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKCdtb3VzZXVwJywgaGFuZGxlciwgb2JqZWN0LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZURvd24oaGFuZGxlciwgb2JqZWN0LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2Vkb3duJywgaGFuZGxlciwgb2JqZWN0LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZU92ZXIoaGFuZGxlciwgb2JqZWN0LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2VvdmVyJywgaGFuZGxlciwgb2JqZWN0LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZU91dChoYW5kbGVyLCBvYmplY3QsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKCdtb3VzZW91dCcsIGhhbmRsZXIsIG9iamVjdCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9uTW91c2VNb3ZlKGhhbmRsZXIsIG9iamVjdCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oJ21vdXNlbW92ZScsIGhhbmRsZXIsIG9iamVjdCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9mZk1vdXNlVXAoaGFuZGxlciwgb2JqZWN0KSB7IHRoaXMub2ZmKCdtb3VzZXVwJywgaGFuZGxlciwgb2JqZWN0KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZURvd24oaGFuZGxlciwgb2JqZWN0KSB7IHRoaXMub2ZmKCdtb3VzZWRvd24nLCBoYW5kbGVyLCBvYmplY3QpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlT3ZlcihoYW5kbGVyLCBvYmplY3QpIHsgdGhpcy5vZmYoJ21vdXNlb3ZlcicsIGhhbmRsZXIsIG9iamVjdCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VPdXQoaGFuZGxlciwgb2JqZWN0KSB7IHRoaXMub2ZmKCdtb3VzZW91dCcsIGhhbmRsZXIsIG9iamVjdCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VNb3ZlKGhhbmRsZXIsIG9iamVjdCkgeyB0aGlzLm9mZignbW91c2Vtb3ZlJywgaGFuZGxlciwgb2JqZWN0KTsgfVxuXG5jb25zdCBtb3VzZU1peGluID0ge1xuICBvbk1vdXNlVXA6IG9uTW91c2VVcCxcbiAgb25Nb3VzZURvd246IG9uTW91c2VEb3duLFxuICBvbk1vdXNlT3Zlcjogb25Nb3VzZU92ZXIsXG4gIG9uTW91c2VPdXQ6IG9uTW91c2VPdXQsXG4gIG9uTW91c2VNb3ZlOiBvbk1vdXNlTW92ZSxcbiAgb2ZmTW91c2VVcDogb2ZmTW91c2VVcCxcbiAgb2ZmTW91c2VEb3duOiBvZmZNb3VzZURvd24sXG4gIG9mZk1vdXNlT3Zlcjogb2ZmTW91c2VPdmVyLFxuICBvZmZNb3VzZU91dDogb2ZmTW91c2VPdXQsXG4gIG9mZk1vdXNlTW92ZTogb2ZmTW91c2VNb3ZlXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vdXNlTWl4aW47XG5cbmZ1bmN0aW9uIGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKGhhbmRsZXIsIGV2ZW50LCB0YXJnZXRFbGVtZW50KSB7XG4gIGNvbnN0IG1vdXNlVG9wID0gZXZlbnQucGFnZVksICAvLy9cbiAgICAgICAgbW91c2VMZWZ0ID0gZXZlbnQucGFnZVgsIC8vL1xuICAgICAgICBtb3VzZUJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjsgLy8vXG4gIFxuICBoYW5kbGVyKG1vdXNlVG9wLCBtb3VzZUxlZnQsIG1vdXNlQnV0dG9uLCBldmVudCwgdGFyZ2V0RWxlbWVudCk7XG59XG4iXX0=
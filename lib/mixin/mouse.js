'use strict';

function onMouseUp(handler, preventDefault) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mouseup', handler, preventDefault, intermediateHandler);
}

function offMouseUp(handler) {
  this.off('mouseup', handler);
}

function onMouseDown(handler, preventDefault) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mousedown', handler, preventDefault, intermediateHandler);
}

function offMouseDown(handler) {
  this.off('mousedown', handler);
}

function onMouseOver(handler, preventDefault) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mouseover', handler, preventDefault, intermediateHandler);
}

function offMouseOver(handler) {
  this.off('mouseover', handler);
}

function onMouseOut(handler, preventDefault) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mouseout', handler, preventDefault, intermediateHandler);
}

function offMouseOut(handler) {
  this.off('mouseout', handler);
}

function onMouseMove(handler, preventDefault) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mousemove', handler, preventDefault, intermediateHandler);
}

function offMouseMove(handler) {
  this.off('mousemove', handler);
}

var mouse = {
  onMouseUp: onMouseUp,
  offMouseUp: offMouseUp,
  onMouseDown: onMouseDown,
  offMouseDown: offMouseDown,
  onMouseOver: onMouseOver,
  offMouseOver: offMouseOver,
  onMouseOut: onMouseOut,
  offMouseOut: offMouseOut,
  onMouseMove: onMouseMove,
  offMouseMove: offMouseMove
};

module.exports = mouse;

function defaultIntermediateHandler(event, handler) {
  var mouseTop = event.pageY,
      ///
  mouseLeft = event.pageX,
      ///
  mouseButton = event.button; ///

  handler(mouseTop, mouseLeft, mouseButton);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi9tb3VzZS5qcyJdLCJuYW1lcyI6WyJvbk1vdXNlVXAiLCJoYW5kbGVyIiwicHJldmVudERlZmF1bHQiLCJpbnRlcm1lZGlhdGVIYW5kbGVyIiwiZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIiLCJvbiIsIm9mZk1vdXNlVXAiLCJvZmYiLCJvbk1vdXNlRG93biIsIm9mZk1vdXNlRG93biIsIm9uTW91c2VPdmVyIiwib2ZmTW91c2VPdmVyIiwib25Nb3VzZU91dCIsIm9mZk1vdXNlT3V0Iiwib25Nb3VzZU1vdmUiLCJvZmZNb3VzZU1vdmUiLCJtb3VzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJldmVudCIsIm1vdXNlVG9wIiwicGFnZVkiLCJtb3VzZUxlZnQiLCJwYWdlWCIsIm1vdXNlQnV0dG9uIiwiYnV0dG9uIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxTQUFULENBQW1CQyxPQUFuQixFQUE0QkMsY0FBNUIsRUFBOEY7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCO0FBQUUsT0FBS0MsRUFBTCxDQUFRLFNBQVIsRUFBbUJKLE9BQW5CLEVBQTRCQyxjQUE1QixFQUE0Q0MsbUJBQTVDO0FBQW1FOztBQUVuSyxTQUFTRyxVQUFULENBQW9CTCxPQUFwQixFQUE2QjtBQUFFLE9BQUtNLEdBQUwsQ0FBUyxTQUFULEVBQW9CTixPQUFwQjtBQUErQjs7QUFFOUQsU0FBU08sV0FBVCxDQUFxQlAsT0FBckIsRUFBOEJDLGNBQTlCLEVBQWdHO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0QjtBQUFFLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSixPQUFyQixFQUE4QkMsY0FBOUIsRUFBOENDLG1CQUE5QztBQUFxRTs7QUFFdkssU0FBU00sWUFBVCxDQUFzQlIsT0FBdEIsRUFBK0I7QUFBRSxPQUFLTSxHQUFMLENBQVMsV0FBVCxFQUFzQk4sT0FBdEI7QUFBaUM7O0FBRWxFLFNBQVNTLFdBQVQsQ0FBcUJULE9BQXJCLEVBQThCQyxjQUE5QixFQUFnRztBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7QUFBRSxPQUFLQyxFQUFMLENBQVEsV0FBUixFQUFxQkosT0FBckIsRUFBOEJDLGNBQTlCLEVBQThDQyxtQkFBOUM7QUFBcUU7O0FBRXZLLFNBQVNRLFlBQVQsQ0FBc0JWLE9BQXRCLEVBQStCO0FBQUUsT0FBS00sR0FBTCxDQUFTLFdBQVQsRUFBc0JOLE9BQXRCO0FBQWlDOztBQUVsRSxTQUFTVyxVQUFULENBQW9CWCxPQUFwQixFQUE2QkMsY0FBN0IsRUFBK0Y7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCO0FBQUUsT0FBS0MsRUFBTCxDQUFRLFVBQVIsRUFBb0JKLE9BQXBCLEVBQTZCQyxjQUE3QixFQUE2Q0MsbUJBQTdDO0FBQW9FOztBQUVySyxTQUFTVSxXQUFULENBQXFCWixPQUFyQixFQUE4QjtBQUFFLE9BQUtNLEdBQUwsQ0FBUyxVQUFULEVBQXFCTixPQUFyQjtBQUFnQzs7QUFFaEUsU0FBU2EsV0FBVCxDQUFxQmIsT0FBckIsRUFBOEJDLGNBQTlCLEVBQWdHO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0QjtBQUFFLE9BQUtDLEVBQUwsQ0FBUSxXQUFSLEVBQXFCSixPQUFyQixFQUE4QkMsY0FBOUIsRUFBOENDLG1CQUE5QztBQUFxRTs7QUFFdkssU0FBU1ksWUFBVCxDQUFzQmQsT0FBdEIsRUFBK0I7QUFBRSxPQUFLTSxHQUFMLENBQVMsV0FBVCxFQUFzQk4sT0FBdEI7QUFBaUM7O0FBRWxFLElBQU1lLFFBQVE7QUFDWmhCLGFBQVdBLFNBREM7QUFFWk0sY0FBWUEsVUFGQTtBQUdaRSxlQUFhQSxXQUhEO0FBSVpDLGdCQUFjQSxZQUpGO0FBS1pDLGVBQWFBLFdBTEQ7QUFNWkMsZ0JBQWNBLFlBTkY7QUFPWkMsY0FBWUEsVUFQQTtBQVFaQyxlQUFhQSxXQVJEO0FBU1pDLGVBQWFBLFdBVEQ7QUFVWkMsZ0JBQWNBO0FBVkYsQ0FBZDs7QUFhQUUsT0FBT0MsT0FBUCxHQUFpQkYsS0FBakI7O0FBRUEsU0FBU1osMEJBQVQsQ0FBb0NlLEtBQXBDLEVBQTJDbEIsT0FBM0MsRUFBb0Q7QUFDbEQsTUFBTW1CLFdBQVdELE1BQU1FLEtBQXZCO0FBQUEsTUFBK0I7QUFDekJDLGNBQVlILE1BQU1JLEtBRHhCO0FBQUEsTUFDK0I7QUFDekJDLGdCQUFjTCxNQUFNTSxNQUYxQixDQURrRCxDQUdoQjs7QUFFbEN4QixVQUFRbUIsUUFBUixFQUFrQkUsU0FBbEIsRUFBNkJFLFdBQTdCO0FBQ0QiLCJmaWxlIjoibW91c2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9uTW91c2VVcChoYW5kbGVyLCBwcmV2ZW50RGVmYXVsdCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7IHRoaXMub24oJ21vdXNldXAnLCBoYW5kbGVyLCBwcmV2ZW50RGVmYXVsdCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VVcChoYW5kbGVyKSB7IHRoaXMub2ZmKCdtb3VzZXVwJywgaGFuZGxlcik7IH1cblxuZnVuY3Rpb24gb25Nb3VzZURvd24oaGFuZGxlciwgcHJldmVudERlZmF1bHQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikgeyB0aGlzLm9uKCdtb3VzZWRvd24nLCBoYW5kbGVyLCBwcmV2ZW50RGVmYXVsdCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VEb3duKGhhbmRsZXIpIHsgdGhpcy5vZmYoJ21vdXNlZG93bicsIGhhbmRsZXIpOyB9XG5cbmZ1bmN0aW9uIG9uTW91c2VPdmVyKGhhbmRsZXIsIHByZXZlbnREZWZhdWx0LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHsgdGhpcy5vbignbW91c2VvdmVyJywgaGFuZGxlciwgcHJldmVudERlZmF1bHQsIGludGVybWVkaWF0ZUhhbmRsZXIpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlT3ZlcihoYW5kbGVyKSB7IHRoaXMub2ZmKCdtb3VzZW92ZXInLCBoYW5kbGVyKTsgfVxuXG5mdW5jdGlvbiBvbk1vdXNlT3V0KGhhbmRsZXIsIHByZXZlbnREZWZhdWx0LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHsgdGhpcy5vbignbW91c2VvdXQnLCBoYW5kbGVyLCBwcmV2ZW50RGVmYXVsdCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VPdXQoaGFuZGxlcikgeyB0aGlzLm9mZignbW91c2VvdXQnLCBoYW5kbGVyKTsgfVxuXG5mdW5jdGlvbiBvbk1vdXNlTW92ZShoYW5kbGVyLCBwcmV2ZW50RGVmYXVsdCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7IHRoaXMub24oJ21vdXNlbW92ZScsIGhhbmRsZXIsIHByZXZlbnREZWZhdWx0LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZU1vdmUoaGFuZGxlcikgeyB0aGlzLm9mZignbW91c2Vtb3ZlJywgaGFuZGxlcik7IH1cblxuY29uc3QgbW91c2UgPSB7XG4gIG9uTW91c2VVcDogb25Nb3VzZVVwLFxuICBvZmZNb3VzZVVwOiBvZmZNb3VzZVVwLFxuICBvbk1vdXNlRG93bjogb25Nb3VzZURvd24sXG4gIG9mZk1vdXNlRG93bjogb2ZmTW91c2VEb3duLFxuICBvbk1vdXNlT3Zlcjogb25Nb3VzZU92ZXIsXG4gIG9mZk1vdXNlT3Zlcjogb2ZmTW91c2VPdmVyLFxuICBvbk1vdXNlT3V0OiBvbk1vdXNlT3V0LFxuICBvZmZNb3VzZU91dDogb2ZmTW91c2VPdXQsXG4gIG9uTW91c2VNb3ZlOiBvbk1vdXNlTW92ZSxcbiAgb2ZmTW91c2VNb3ZlOiBvZmZNb3VzZU1vdmVcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbW91c2U7XG5cbmZ1bmN0aW9uIGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKGV2ZW50LCBoYW5kbGVyKSB7XG4gIGNvbnN0IG1vdXNlVG9wID0gZXZlbnQucGFnZVksICAvLy9cbiAgICAgICAgbW91c2VMZWZ0ID0gZXZlbnQucGFnZVgsIC8vL1xuICAgICAgICBtb3VzZUJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjsgLy8vXG4gIFxuICBoYW5kbGVyKG1vdXNlVG9wLCBtb3VzZUxlZnQsIG1vdXNlQnV0dG9uKTtcbn1cbiJdfQ==
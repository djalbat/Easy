"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _element = _interopRequireDefault(require("./element"));

var _array = require("./utilities/array");

var _elements = require("./utilities/elements");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function createElement(firstArgument, properties) {
  var element = null;

  if (firstArgument !== undefined) {
    for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      remainingArguments[_key - 2] = arguments[_key];
    }

    var childElements = childElementsFromRemainingArguments(remainingArguments);
    properties = Object.assign({
      childElements: childElements
    }, properties);

    if (false) {///
    } else if (isSubclassOf(firstArgument, _element["default"])) {
      var Class = firstArgument; ///

      element = Class.fromProperties(properties);
    } else if (typeof firstArgument === "string") {
      var tagName = firstArgument; ///

      element = _element["default"].fromTagName(tagName, properties);
    } else if (typeof firstArgument === "function") {
      var elementFunction = firstArgument; ///

      element = elementFunction(properties);
    }
  }

  return element;
}

var React = {
  createElement: createElement
};
var _default = React;
exports["default"] = _default;

function childElementsFromRemainingArguments(remainingArguments) {
  remainingArguments = (0, _array.flatten)(remainingArguments); ///

  var childElements = remainingArguments; ///

  childElements = (0, _elements.removeFalseyElements)(childElements);
  childElements = (0, _elements.replaceStringsWithTextElements)(childElements);
  return childElements;
}

function isSubclassOf(argument, Class) {
  var typeOf = false;

  if (argument.name === Class.name) {
    ///
    typeOf = true;
  } else {
    argument = Object.getPrototypeOf(argument); ///

    if (argument) {
      typeOf = isSubclassOf(argument, Class);
    }
  }

  return typeOf;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmpzIl0sIm5hbWVzIjpbImNyZWF0ZUVsZW1lbnQiLCJmaXJzdEFyZ3VtZW50IiwicHJvcGVydGllcyIsImVsZW1lbnQiLCJ1bmRlZmluZWQiLCJyZW1haW5pbmdBcmd1bWVudHMiLCJjaGlsZEVsZW1lbnRzIiwiY2hpbGRFbGVtZW50c0Zyb21SZW1haW5pbmdBcmd1bWVudHMiLCJPYmplY3QiLCJhc3NpZ24iLCJpc1N1YmNsYXNzT2YiLCJFbGVtZW50IiwiQ2xhc3MiLCJmcm9tUHJvcGVydGllcyIsInRhZ05hbWUiLCJmcm9tVGFnTmFtZSIsImVsZW1lbnRGdW5jdGlvbiIsIlJlYWN0IiwiYXJndW1lbnQiLCJ0eXBlT2YiLCJuYW1lIiwiZ2V0UHJvdG90eXBlT2YiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBRUE7O0FBRUE7O0FBQ0E7Ozs7QUFFQSxTQUFTQSxhQUFULENBQXVCQyxhQUF2QixFQUFzQ0MsVUFBdEMsRUFBeUU7QUFDdkUsTUFBSUMsT0FBTyxHQUFHLElBQWQ7O0FBRUEsTUFBSUYsYUFBYSxLQUFLRyxTQUF0QixFQUFpQztBQUFBLHNDQUhrQkMsa0JBR2xCO0FBSGtCQSxNQUFBQSxrQkFHbEI7QUFBQTs7QUFDL0IsUUFBTUMsYUFBYSxHQUFHQyxtQ0FBbUMsQ0FBQ0Ysa0JBQUQsQ0FBekQ7QUFFQUgsSUFBQUEsVUFBVSxHQUFHTSxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUN6QkgsTUFBQUEsYUFBYSxFQUFiQTtBQUR5QixLQUFkLEVBRVZKLFVBRlUsQ0FBYjs7QUFJQSxRQUFJLEtBQUosRUFBVyxDQUNUO0FBQ0QsS0FGRCxNQUVPLElBQUlRLFlBQVksQ0FBQ1QsYUFBRCxFQUFnQlUsbUJBQWhCLENBQWhCLEVBQTBDO0FBQy9DLFVBQU1DLEtBQUssR0FBR1gsYUFBZCxDQUQrQyxDQUNqQjs7QUFFOUJFLE1BQUFBLE9BQU8sR0FBR1MsS0FBSyxDQUFDQyxjQUFOLENBQXFCWCxVQUFyQixDQUFWO0FBQ0QsS0FKTSxNQUlBLElBQUksT0FBT0QsYUFBUCxLQUF5QixRQUE3QixFQUF1QztBQUM1QyxVQUFNYSxPQUFPLEdBQUdiLGFBQWhCLENBRDRDLENBQ2I7O0FBRS9CRSxNQUFBQSxPQUFPLEdBQUdRLG9CQUFRSSxXQUFSLENBQW9CRCxPQUFwQixFQUE2QlosVUFBN0IsQ0FBVjtBQUNELEtBSk0sTUFJQSxJQUFJLE9BQU9ELGFBQVAsS0FBeUIsVUFBN0IsRUFBeUM7QUFDOUMsVUFBTWUsZUFBZSxHQUFHZixhQUF4QixDQUQ4QyxDQUNOOztBQUV4Q0UsTUFBQUEsT0FBTyxHQUFHYSxlQUFlLENBQUNkLFVBQUQsQ0FBekI7QUFDRDtBQUNGOztBQUVELFNBQU9DLE9BQVA7QUFDRDs7QUFFRCxJQUFNYyxLQUFLLEdBQUc7QUFDWmpCLEVBQUFBLGFBQWEsRUFBYkE7QUFEWSxDQUFkO2VBSWVpQixLOzs7QUFFZixTQUFTVixtQ0FBVCxDQUE2Q0Ysa0JBQTdDLEVBQWlFO0FBQy9EQSxFQUFBQSxrQkFBa0IsR0FBRyxvQkFBUUEsa0JBQVIsQ0FBckIsQ0FEK0QsQ0FDYjs7QUFFbEQsTUFBSUMsYUFBYSxHQUFHRCxrQkFBcEIsQ0FIK0QsQ0FHdkI7O0FBRXhDQyxFQUFBQSxhQUFhLEdBQUcsb0NBQXFCQSxhQUFyQixDQUFoQjtBQUVBQSxFQUFBQSxhQUFhLEdBQUcsOENBQStCQSxhQUEvQixDQUFoQjtBQUVBLFNBQU9BLGFBQVA7QUFDRDs7QUFFRCxTQUFTSSxZQUFULENBQXNCUSxRQUF0QixFQUFnQ04sS0FBaEMsRUFBdUM7QUFDckMsTUFBSU8sTUFBTSxHQUFHLEtBQWI7O0FBRUEsTUFBSUQsUUFBUSxDQUFDRSxJQUFULEtBQWtCUixLQUFLLENBQUNRLElBQTVCLEVBQWtDO0FBQUU7QUFDbENELElBQUFBLE1BQU0sR0FBRyxJQUFUO0FBQ0QsR0FGRCxNQUVPO0FBQ0xELElBQUFBLFFBQVEsR0FBR1YsTUFBTSxDQUFDYSxjQUFQLENBQXNCSCxRQUF0QixDQUFYLENBREssQ0FDdUM7O0FBRTVDLFFBQUlBLFFBQUosRUFBYztBQUNaQyxNQUFBQSxNQUFNLEdBQUdULFlBQVksQ0FBQ1EsUUFBRCxFQUFXTixLQUFYLENBQXJCO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPTyxNQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4vZWxlbWVudFwiO1xuXG5pbXBvcnQgeyBmbGF0dGVuIH0gZnJvbSBcIi4vdXRpbGl0aWVzL2FycmF5XCI7XG5pbXBvcnQgeyByZW1vdmVGYWxzZXlFbGVtZW50cywgcmVwbGFjZVN0cmluZ3NXaXRoVGV4dEVsZW1lbnRzIH0gZnJvbSBcIi4vdXRpbGl0aWVzL2VsZW1lbnRzXCI7XG5cbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQoZmlyc3RBcmd1bWVudCwgcHJvcGVydGllcywgLi4ucmVtYWluaW5nQXJndW1lbnRzKSB7XG4gIGxldCBlbGVtZW50ID0gbnVsbDtcblxuICBpZiAoZmlyc3RBcmd1bWVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgY2hpbGRFbGVtZW50cyA9IGNoaWxkRWxlbWVudHNGcm9tUmVtYWluaW5nQXJndW1lbnRzKHJlbWFpbmluZ0FyZ3VtZW50cyk7XG5cbiAgICBwcm9wZXJ0aWVzID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBjaGlsZEVsZW1lbnRzXG4gICAgfSwgcHJvcGVydGllcyk7XG5cbiAgICBpZiAoZmFsc2UpIHtcbiAgICAgIC8vL1xuICAgIH0gZWxzZSBpZiAoaXNTdWJjbGFzc09mKGZpcnN0QXJndW1lbnQsIEVsZW1lbnQpKSB7XG4gICAgICBjb25zdCBDbGFzcyA9IGZpcnN0QXJndW1lbnQ7ICAvLy9cblxuICAgICAgZWxlbWVudCA9IENsYXNzLmZyb21Qcm9wZXJ0aWVzKHByb3BlcnRpZXMpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGZpcnN0QXJndW1lbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIGNvbnN0IHRhZ05hbWUgPSBmaXJzdEFyZ3VtZW50OyAvLy9cblxuICAgICAgZWxlbWVudCA9IEVsZW1lbnQuZnJvbVRhZ05hbWUodGFnTmFtZSwgcHJvcGVydGllcyk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZmlyc3RBcmd1bWVudCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBjb25zdCBlbGVtZW50RnVuY3Rpb24gPSBmaXJzdEFyZ3VtZW50OyAgLy8vXG5cbiAgICAgIGVsZW1lbnQgPSBlbGVtZW50RnVuY3Rpb24ocHJvcGVydGllcyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbmNvbnN0IFJlYWN0ID0ge1xuICBjcmVhdGVFbGVtZW50XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZWFjdDtcblxuZnVuY3Rpb24gY2hpbGRFbGVtZW50c0Zyb21SZW1haW5pbmdBcmd1bWVudHMocmVtYWluaW5nQXJndW1lbnRzKSB7XG4gIHJlbWFpbmluZ0FyZ3VtZW50cyA9IGZsYXR0ZW4ocmVtYWluaW5nQXJndW1lbnRzKTsgLy8vXG5cbiAgbGV0IGNoaWxkRWxlbWVudHMgPSByZW1haW5pbmdBcmd1bWVudHM7IC8vL1xuXG4gIGNoaWxkRWxlbWVudHMgPSByZW1vdmVGYWxzZXlFbGVtZW50cyhjaGlsZEVsZW1lbnRzKTtcblxuICBjaGlsZEVsZW1lbnRzID0gcmVwbGFjZVN0cmluZ3NXaXRoVGV4dEVsZW1lbnRzKGNoaWxkRWxlbWVudHMpO1xuXG4gIHJldHVybiBjaGlsZEVsZW1lbnRzO1xufVxuXG5mdW5jdGlvbiBpc1N1YmNsYXNzT2YoYXJndW1lbnQsIENsYXNzKSB7XG4gIGxldCB0eXBlT2YgPSBmYWxzZTtcblxuICBpZiAoYXJndW1lbnQubmFtZSA9PT0gQ2xhc3MubmFtZSkgeyAvLy9cbiAgICB0eXBlT2YgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIGFyZ3VtZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGFyZ3VtZW50KTsgLy8vXG5cbiAgICBpZiAoYXJndW1lbnQpIHtcbiAgICAgIHR5cGVPZiA9IGlzU3ViY2xhc3NPZihhcmd1bWVudCwgQ2xhc3MpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0eXBlT2Y7XG59XG4iXX0=